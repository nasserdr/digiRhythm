[{"path":"https://nasserdr.github.io/digiRhythm/articles/Actgram_diurnality_avg_activity.html","id":"actograms","dir":"Articles","previous_headings":"","what":"Actograms","title":"Visualizing actograms, average activity and diurnality index","text":"proceed plot actogram activity. can choose start end date actogram. can also choose alias activity. alias used aesthetics purpose plots. instance, name activity column motion.index, don’t probably want show string plot’s legend, rather coded properly ‘Motion Index’. actogram function also offers possibility save graph directly path shown commented line . Users provide path (relative physical) without file name ignoring extension. pictures digiRhythm saved tiff format ’s widely used extension scientific publications. User possibility save plot another extension configuration simply saving actogram object variable (ggplot object) control wish . User additionally use actogram object work calculated data.","code":"start <- \"2020-08-25\" # year-month-day end <- \"2020-10-11\" # year-month-day --> activity_alias <- \"Motion Index\" # save <- 'sample_results/actogram' #if NULL, don't save the image my_actogram <- actogram(data, activity, activity_alias, start, end, save = NULL)"},{"path":"https://nasserdr.github.io/digiRhythm/articles/Actgram_diurnality_avg_activity.html","id":"average-activity","dir":"Articles","previous_headings":"","what":"Average Activity","title":"Visualizing actograms, average activity and diurnality index","text":"Now, plot average activity. follow dataframe logic like actograms. user use resulted object actogram object.","code":"start <- \"2020-08-25\" # year-month-day end <- \"2020-10-11\" # year-month-day --> activity_alias <- \"Motion Index\" # save <- 'sample_results/actogram' #if NULL, don't save the image my_daa <- daily_average_activity(data, activity,   activity_alias,   start,   end,   save = NULL )"},{"path":"https://nasserdr.github.io/digiRhythm/articles/Actgram_diurnality_avg_activity.html","id":"diurnality-index","dir":"Articles","previous_headings":"","what":"Diurnality Index","title":"Visualizing actograms, average activity and diurnality index","text":"diurnality index computed plotted using diurnality function follows. user opportunity change day- night-time. default daytime 06:30 16:30. Default night-time occurred 18:00 05:00. user can adapt time lighttime exclude management times animals. Management times periods humans influence activity animal, possible realize activity (excample milking time dairy cows). actogram function offers possibility save graph directly using ggplot object configurate different plot work calculated data.","code":"day_time <- c(\"06:30:00\", \"16:30:00\") night_time <- c(\"18:00:00\", \"T05:00:00\") my_di <- diurnality(data, activity, day_time, night_time, save = NULL)"},{"path":"https://nasserdr.github.io/digiRhythm/articles/DFC_and_HP_and_changing_plots.html","id":"degree-of-functional-coupling-dfc-and-harmonic-power-hp","dir":"Articles","previous_headings":"","what":"Degree of Functional Coupling (DFC) and Harmonic Power (HP)","title":"Computing the DFC/HP and manipulating the functions returned objects","text":"degree functional coupling harmonic power computed using dfc function shown . DFC algorithm bit complicated. ’s, therefore, needed clarify points computing considerations also arguments function : recommended sampling period 15 30 min. DFC HP computed X days. call X rolling window. example, rolling window 7 days, first DFC/HP value computed subset day 1 day 7, second DFC/HP value computed subset day 2 day 8, . data contains 8 days data, two DFC HP values. recommended rolling window 7 days, however user can choose rolling window less two days number days dataset -1. computation DFC/HP mainly based power 24-hours harmonics (24/1 first harmonic, 24/2 second harmonic, 24/3 third harmonic, ), user can choose till harmonic consider. default value 12. ’s important note lowest harmonic period twice bigger sampling period. example, data sampled 15 minutes, lowest harmonic period 30 minutes. Nyquist frequency half sampling frequency. Consequently, harmonic cutoff parameter set 48 (24 hours * 60 min / 48 = 30 min = 2 * 15 min sampling period). user need worry looping days extracting Lomb Scargle periodogram every X (rolling window) days compile results obtain degree functional coupling. done loop inside dfc function. However, also function call lomb_scargle_periodogram user can investigate activity little bit deeper. preview lomb_scargle_periodogram function output, go dfc function.  plot, see plenty information. First, whole periodogram dataframe df visualized. Second, can distinguish harmonic non harmonic frequencies. Harmonic frequencies plotted blue tagged time period correspond . instance, can check power 24h cycles, 12h cycles, 6h cycles . Third, dotted horizontal line makes easy visually check frequencies considered originated noise rather actual signal. Frequency bars make line considered originated real activity. probability event calculated using method Baluev (2008). plot also shows, title, activity time span used computation. Warning: moment, function computes LSP first 7 days data. loop, calculate LSP whole data, included later version. However, moment user can see LSP-diagrams whole data, running dfc function. complete DFC HP diagram, LSP diagram sliding 7-day periods computed. Now, DFC. plot shows DFC HP graph. variables percentages.                                            # Accessing output data changing plots using DigiRhythm DFC function returns object type ggplot: shown, class gg ggplot. allows user : - Access data DFC HP directly returned object. - Add aesthetics layer plot needed. access data, user use data component DFC object. illustrate code: shown, can access dataframe first comlumn date second two columns DFC HP respectively. allow users able use returned data studies modelling. Users can also change aesthetics plot directly wish. possible adding ggplot layer returned DFC object. instance, original plot returned DFC: illustrative example, code add new aesthetic layer ggplot object. layer nothing increasing width x-axis. Users can add aesthetic layer wish; immagination limit.","code":"df <- data[1:672, c(\"datetime\", activity)] my_lsp <- lomb_scargle_periodogram(df, alpha = 0.01, plot = TRUE) #> v Correct time format: First column has a POSIXct Format  #> v Number of days good for DFC: 8 days >= 2 days  #> v Correct numeric format - Column 2 ==> Steps  #> The data is digiRhythm friendly my_dfc <- dfc(data, # The dataset   activity = activity, # the name of the activity column   sampling = 15, # the sampling frequency of my dataset is 15   alpha = 0, 5, # significance level   harm_cutoff = 12, # up till the harmonic 24/12 which is two hours   plot = FALSE, verbose = FALSE ) #>              datetime Motion.Index Steps #> 1 2020-08-25 00:00:00           20     8 #> 2 2020-08-25 00:15:00           52    46 #> 3 2020-08-25 00:30:00           61    39 #> 4 2020-08-25 00:45:00           29    18 #> 5 2020-08-25 01:00:00           83    26 #> 6 2020-08-25 01:15:00           50    23 #> [1] 43 #> v Correct time format: First column has a POSIXct Format  #> v Number of days good for DFC: 4 days >= 2 days  #> v Correct numeric format - Column 2 ==> Steps  #> The data is digiRhythm friendly #> v Correct time format: First column has a POSIXct Format  #> v Number of days good for DFC: 5 days >= 2 days  #> v Correct numeric format - Column 2 ==> Steps  #> The data is digiRhythm friendly #> v Correct time format: First column has a POSIXct Format  #> v Number of days good for DFC: 5 days >= 2 days  #> v Correct numeric format - Column 2 ==> Steps  #> The data is digiRhythm friendly #> v Correct time format: First column has a POSIXct Format  #> v Number of days good for DFC: 5 days >= 2 days  #> v Correct numeric format - Column 2 ==> Steps  #> The data is digiRhythm friendly #> v Correct time format: First column has a POSIXct Format  #> v Number of days good for DFC: 5 days >= 2 days  #> v Correct numeric format - Column 2 ==> Steps  #> The data is digiRhythm friendly #> v Correct time format: First column has a POSIXct Format  #> v Number of days good for DFC: 5 days >= 2 days  #> v Correct numeric format - Column 2 ==> Steps  #> The data is digiRhythm friendly #> v Correct time format: First column has a POSIXct Format  #> v Number of days good for DFC: 5 days >= 2 days  #> v Correct numeric format - Column 2 ==> Steps  #> The data is digiRhythm friendly #> v Correct time format: First column has a POSIXct Format  #> v Number of days good for DFC: 5 days >= 2 days  #> v Correct numeric format - Column 2 ==> Steps  #> The data is digiRhythm friendly #> v Correct time format: First column has a POSIXct Format  #> v Number of days good for DFC: 5 days >= 2 days  #> v Correct numeric format - Column 2 ==> Steps  #> The data is digiRhythm friendly #> v Correct time format: First column has a POSIXct Format  #> v Number of days good for DFC: 5 days >= 2 days  #> v Correct numeric format - Column 2 ==> Steps  #> The data is digiRhythm friendly #> v Correct time format: First column has a POSIXct Format  #> v Number of days good for DFC: 5 days >= 2 days  #> v Correct numeric format - Column 2 ==> Steps  #> The data is digiRhythm friendly #> v Correct time format: First column has a POSIXct Format  #> v Number of days good for DFC: 5 days >= 2 days  #> v Correct numeric format - Column 2 ==> Steps  #> The data is digiRhythm friendly #> v Correct time format: First column has a POSIXct Format  #> v Number of days good for DFC: 5 days >= 2 days  #> v Correct numeric format - Column 2 ==> Steps  #> The data is digiRhythm friendly #> v Correct time format: First column has a POSIXct Format  #> v Number of days good for DFC: 5 days >= 2 days  #> v Correct numeric format - Column 2 ==> Steps  #> The data is digiRhythm friendly #> v Correct time format: First column has a POSIXct Format  #> v Number of days good for DFC: 5 days >= 2 days  #> v Correct numeric format - Column 2 ==> Steps  #> The data is digiRhythm friendly #> v Correct time format: First column has a POSIXct Format  #> v Number of days good for DFC: 5 days >= 2 days  #> v Correct numeric format - Column 2 ==> Steps  #> The data is digiRhythm friendly #> v Correct time format: First column has a POSIXct Format  #> v Number of days good for DFC: 5 days >= 2 days  #> v Correct numeric format - Column 2 ==> Steps  #> The data is digiRhythm friendly #> v Correct time format: First column has a POSIXct Format  #> v Number of days good for DFC: 5 days >= 2 days  #> v Correct numeric format - Column 2 ==> Steps  #> The data is digiRhythm friendly #> v Correct time format: First column has a POSIXct Format  #> v Number of days good for DFC: 5 days >= 2 days  #> v Correct numeric format - Column 2 ==> Steps  #> The data is digiRhythm friendly #> v Correct time format: First column has a POSIXct Format  #> v Number of days good for DFC: 5 days >= 2 days  #> v Correct numeric format - Column 2 ==> Steps  #> The data is digiRhythm friendly #> v Correct time format: First column has a POSIXct Format  #> v Number of days good for DFC: 5 days >= 2 days  #> v Correct numeric format - Column 2 ==> Steps  #> The data is digiRhythm friendly #> v Correct time format: First column has a POSIXct Format  #> v Number of days good for DFC: 5 days >= 2 days  #> v Correct numeric format - Column 2 ==> Steps  #> The data is digiRhythm friendly #> v Correct time format: First column has a POSIXct Format  #> v Number of days good for DFC: 5 days >= 2 days  #> v Correct numeric format - Column 2 ==> Steps  #> The data is digiRhythm friendly #> v Correct time format: First column has a POSIXct Format  #> v Number of days good for DFC: 5 days >= 2 days  #> v Correct numeric format - Column 2 ==> Steps  #> The data is digiRhythm friendly #> v Correct time format: First column has a POSIXct Format  #> v Number of days good for DFC: 5 days >= 2 days  #> v Correct numeric format - Column 2 ==> Steps  #> The data is digiRhythm friendly #> v Correct time format: First column has a POSIXct Format  #> v Number of days good for DFC: 5 days >= 2 days  #> v Correct numeric format - Column 2 ==> Steps  #> The data is digiRhythm friendly #> v Correct time format: First column has a POSIXct Format  #> v Number of days good for DFC: 5 days >= 2 days  #> v Correct numeric format - Column 2 ==> Steps  #> The data is digiRhythm friendly #> v Correct time format: First column has a POSIXct Format  #> v Number of days good for DFC: 5 days >= 2 days  #> v Correct numeric format - Column 2 ==> Steps  #> The data is digiRhythm friendly #> v Correct time format: First column has a POSIXct Format  #> v Number of days good for DFC: 5 days >= 2 days  #> v Correct numeric format - Column 2 ==> Steps  #> The data is digiRhythm friendly #> v Correct time format: First column has a POSIXct Format  #> v Number of days good for DFC: 5 days >= 2 days  #> v Correct numeric format - Column 2 ==> Steps  #> The data is digiRhythm friendly #> v Correct time format: First column has a POSIXct Format  #> v Number of days good for DFC: 5 days >= 2 days  #> v Correct numeric format - Column 2 ==> Steps  #> The data is digiRhythm friendly #> v Correct time format: First column has a POSIXct Format  #> v Number of days good for DFC: 5 days >= 2 days  #> v Correct numeric format - Column 2 ==> Steps  #> The data is digiRhythm friendly #> v Correct time format: First column has a POSIXct Format  #> v Number of days good for DFC: 5 days >= 2 days  #> v Correct numeric format - Column 2 ==> Steps  #> The data is digiRhythm friendly #> v Correct time format: First column has a POSIXct Format  #> v Number of days good for DFC: 5 days >= 2 days  #> v Correct numeric format - Column 2 ==> Steps  #> The data is digiRhythm friendly #> v Correct time format: First column has a POSIXct Format  #> v Number of days good for DFC: 5 days >= 2 days  #> v Correct numeric format - Column 2 ==> Steps  #> The data is digiRhythm friendly #> v Correct time format: First column has a POSIXct Format  #> v Number of days good for DFC: 5 days >= 2 days  #> v Correct numeric format - Column 2 ==> Steps  #> The data is digiRhythm friendly #> v Correct time format: First column has a POSIXct Format  #> v Number of days good for DFC: 5 days >= 2 days  #> v Correct numeric format - Column 2 ==> Steps  #> The data is digiRhythm friendly #> v Correct time format: First column has a POSIXct Format  #> v Number of days good for DFC: 5 days >= 2 days  #> v Correct numeric format - Column 2 ==> Steps  #> The data is digiRhythm friendly #> v Correct time format: First column has a POSIXct Format  #> v Number of days good for DFC: 5 days >= 2 days  #> v Correct numeric format - Column 2 ==> Steps  #> The data is digiRhythm friendly #> v Correct time format: First column has a POSIXct Format  #> v Number of days good for DFC: 5 days >= 2 days  #> v Correct numeric format - Column 2 ==> Steps  #> The data is digiRhythm friendly #> v Correct time format: First column has a POSIXct Format  #> v Number of days good for DFC: 5 days >= 2 days  #> v Correct numeric format - Column 2 ==> Steps  #> The data is digiRhythm friendly #> v Correct time format: First column has a POSIXct Format  #> v Number of days good for DFC: 5 days >= 2 days  #> v Correct numeric format - Column 2 ==> Steps  #> The data is digiRhythm friendly #> v Correct time format: First column has a POSIXct Format  #> v Number of days good for DFC: 5 days >= 2 days  #> v Correct numeric format - Column 2 ==> Steps  #> The data is digiRhythm friendly # Setting plot to TRUE will visualize all the LSP plots (like the one above) # during each sliding window. Rather used for deeper investigation and # debugging. print(my_dfc) class(my_dfc) #> [1] \"gg\"     \"ggplot\" head(my_dfc$data) #>         from         to       dfc        hp #> 1 2020-08-24 2020-08-28 0.4398348 0.4398348 #> 2 2020-08-25 2020-08-29 0.4287425 0.4287425 #> 3 2020-08-26 2020-08-30 0.3283561 0.3283561 #> 4 2020-08-27 2020-08-31 0.2470351 0.2470351 #> 5 2020-08-28 2020-09-01 0.2422273 0.2422273 #> 6 2020-08-29 2020-09-02 0.2583468 0.2583468 print(my_dfc) library(ggplot2) new_plot <- my_dfc +   theme(     text = element_text(family = \"Times\", size = 14),     axis.text.y = element_text(size = 15, colour = \"black\")   ) print(new_plot)"},{"path":"https://nasserdr.github.io/digiRhythm/articles/Loading_and_preprocessing_data_in_DigiRhythm.html","id":"loading-data-from-a-sample-csv-file","dir":"Articles","previous_headings":"","what":"Loading data from a sample CSV file","title":"Loading and preprocessing data in DigiRhythm","text":"shown previous lines, information needed working data, namely, first 7 lines. date time columns two separate columns. case, import_raw_activity_data function useful. really want make universal import function might unlimited number cases. However, create function called import_raw_activity_data solves couple encountered problems, namely following: date time two separate columns. user wants change timezone data (using arguments original_tz target_tz). user wants change sampling period directly. user wants remove dates contains whole day recording using trim_first_day trim_last_day trim_middle_days. one arguments TRUE, function remove data first (last day, respectively) contains data less 80% supposed contains. particular example, mentionned function call , like skip 7 lines, need read 4 columns, specified date time formats, separator, original target time zones, sampling rate want remove days contains less 80% data. Shown, argument verbose = TRUE outputs useful information data loading process. particularly mention following output: Minimum Required number samples per day 76. 76 obtained computing 80% hypothetical data samples. fact, sampling period 15 min, supposed 96 samples per day. 80% 96 samples equal 76, therefore, days less 96 data points removed.","code":"knitr::opts_chunk$set(echo = TRUE) library(digiRhythm)  # A sample dataset could be found here url <- \"https://raw.githubusercontent.com/nasserdr/digiRhythm_sample_datasets/main/516b_2.csv\" destination <- file.path(tempdir(), \"516b_2.csv\") download.file(url, destfile = destination)  # system(paste(\"head -n 15\",  filename)) #Run it only on linux # IceTag ID:,,50001962,,,, # Site ID:,,n/a,,,, # Animal ID:,,n/a,,,, # First Record:,,30.04.2020,11:54:20,,, # Last Record:,,15.06.2020,11:06:55,,, # File Time Zone:,,W. Europe Standard Time,,,, # # Date,Time,Motion Index,Standing,Lying,Steps,Lying Bouts # 30.04.2020,11:54:20,0,0:00.0,0:40.0,0,0 # 30.04.2020,11:55:00,0,0:00.0,1:00.0,0,0 # 30.04.2020,11:56:00,0,0:00.0,1:00.0,0,0 # 30.04.2020,11:57:00,0,0:00.0,1:00.0,0,0 # 30.04.2020,11:58:00,0,0:00.0,1:00.0,0,0 # 30.04.2020,11:59:00,0,0:00.0,1:00.0,0,0 # 30.04.2020,12:00:00,0,0:00.0,1:00.0,0,0 data <- import_raw_activity_data(destination,   skipLines = 7,   act.cols.names = c(\"Date\", \"Time\", \"Motion Index\", \"Steps\"),   date_format = \"%d.%m.%Y\",   time_format = \"%H:%M:%S\",   sep = \",\",   original_tz = \"CET\",   target_tz = \"CET\",   sampling = 15,   trim_first_day = TRUE,   trim_middle_days = TRUE,   trim_last_day = TRUE,   verbose = TRUE ) #> [1] \"Reading the CSV file /tmp/Rtmp7rgaHB/516b_2.csv\" #> Removing the following columns because they are not numeric #> [1] \"First data points ... \" #>              datetime Motion.Index Steps #> 1 2020-04-30 11:54:20            0     0 #> 2 2020-04-30 11:55:00            0     0 #> 3 2020-04-30 11:56:00            0     0 #> [1] \"Last data point ... \" #>              datetime Motion.Index Steps #> 1 2020-06-15 11:06:00            0     0 #> 2 2020-06-15 11:05:00            2     0 #> 3 2020-06-15 11:04:00            0     0 #> [1] \"Minimum Required number of samples per day 76\" #> [1] \"Returning a data frame with datetime colum and 2 variable colums\" #> [1] \"Total number of samples is 4320 - Total number of days is 45\""},{"path":"https://nasserdr.github.io/digiRhythm/articles/Loading_and_preprocessing_data_in_DigiRhythm.html","id":"checking-if-the-data-is-digirhythm-friendly","dir":"Articles","previous_headings":"","what":"Checking if the data is digiRhythm friendly","title":"Loading and preprocessing data in DigiRhythm","text":"Imposing specific format dataset design choice. wanted avoid future possible errors might happen user use library. digiRhythm friendly dataset following properties: - least two columns. - first column POSIX format (datetime). - columns numeric. - dataset contains data 7 consecutive days least (7 days required compute DFC). function [dgm_friendly()] returns boolean. verbose set TRUE, output details data considered digiRhythm friendly.","code":"is_dgm_friendly(data, verbose = TRUE) #> v Correct time format: First column has a POSIXct Format  #> v Number of days good for DFC: 46 days >= 2 days  #> v Correct numeric format - Column 2 ==> Motion.Index  #> v Correct numeric format - Column 3 ==> Steps  #> The data is digiRhythm friendly #> [1] TRUE"},{"path":"https://nasserdr.github.io/digiRhythm/articles/Loading_and_preprocessing_data_in_DigiRhythm.html","id":"removing-outliers","dir":"Articles","previous_headings":"","what":"Removing outliers","title":"Loading and preprocessing data in DigiRhythm","text":"Sometimes, may outliers want remove . Although outlier removal routine complicated, providing --shelve function DGM friendly data useful might save time. [remove_activity_outliers()] (available inside utils.R) remove outliers non-POSIX columns. data points lie 2.5 97.5 percentiles considered outliers.","code":"data_without_outliers <- remove_activity_outliers(data) head(data_without_outliers) #>              datetime Motion.Index Steps #> 1 2020-05-01 00:00:00            0     0 #> 2 2020-05-01 00:15:00            7     0 #> 3 2020-05-01 00:30:00            3     0 #> 4 2020-05-01 00:45:00           39    13 #> 5 2020-05-01 01:00:00           37    16 #> 6 2020-05-01 01:15:00           33    14"},{"path":"https://nasserdr.github.io/digiRhythm/articles/Loading_and_preprocessing_data_in_DigiRhythm.html","id":"resampling-data","dir":"Articles","previous_headings":"","what":"Resampling data","title":"Loading and preprocessing data in DigiRhythm","text":"Often, data acquired milliseconds seconds sampling periods. However, transforming data higher sampling periods recommended algorithms like degree functional coupling. library offers resampling function useful case. However, two considerations: sampling period can increased decreased. instance, can transform data 1 min sampling period 15 minutes sampling period. resampling concerns activity variables makes sense make additive resampling. instance, measuring number steps every 1 min want resample 15 minutes, can simply add steps 15 minutes. types variables, might case. example, measuring speed acceleration, addition probably make sense, transformation required (case, dividing 15 obtain average speed acceleration). case variable reflect categorical entity transformed dummy variable, argue resampling make sense.","code":"resampled_data <- resample_dgm(data, new_sampling = 15) head(resampled_data) #>              datetime Motion.Index Steps #> 1 2020-05-01 00:00:00            0     0 #> 2 2020-05-01 00:15:00            7     0 #> 3 2020-05-01 00:30:00            3     0 #> 4 2020-05-01 00:45:00           39    13 #> 5 2020-05-01 01:00:00           37    16 #> 6 2020-05-01 01:15:00           33    14"},{"path":"https://nasserdr.github.io/digiRhythm/articles/Loading_and_preprocessing_data_in_DigiRhythm.html","id":"periodicity-of-a-dataset","dir":"Articles","previous_headings":"","what":"Periodicity of a dataset","title":"Loading and preprocessing data in DigiRhythm","text":"Users can access periodicity dataset using dgm_periodicity function shown : - output function shows periodicity start- end-dates data.","code":"s <- dgm_periodicity(data)"},{"path":"https://nasserdr.github.io/digiRhythm/articles/Visualisation.html","id":"daily-activity-wrap","dir":"Articles","previous_headings":"","what":"Daily Activity Wrap","title":"Further options of visualization in DigiRhythm","text":"Now proceed plot daily activity. User can decide plot activity time one day. plot huge plot including number day-plots. User define activity plot. Additionally, user define activity_alias, similar actogram. Start end date defined user, using format “%Y-%m-%d”. Afterwards, sampling_rate data defined. sample size bigger equal sample size dataset. “n_cols”, user able decide many graphs/days shown row plot. User possibility save plot directly, using function.","code":"activity_alias <- \"Motion Index\" start <- \"2020-08-25\" # year-month-day end <- \"2020-10-11\" # year-month-day sampling_rate <- 15 ncols <- 3 # number of columns # save <- 'sample_results/daily_wrap_plot' #if Null, doesn't save the image my_daily_wrap_plot <- daily_activity_wrap_plot(data, activity,   activity_alias,   start,   end,   sampling_rate,   ncols,   save = Null )"},{"path":"https://nasserdr.github.io/digiRhythm/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Hassan-Roland Nasser. Author, maintainer. Marie Schneider. Author, contributor. Joanna Stachowicz. Author, reviewer. Christina Umstaetter. Author, thesis advisor.","code":""},{"path":"https://nasserdr.github.io/digiRhythm/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Nasser H, Schneider M, Stachowicz J, Umstaetter C (2025). digiRhythm: Analyzing Animal's Rhythmicity. R package version 2.5, https://nasserdr.github.io/digiRhythm/.","code":"@Manual{,   title = {digiRhythm: Analyzing Animal's Rhythmicity},   author = {Hassan-Roland Nasser and Marie Schneider and Joanna Stachowicz and Christina Umstaetter},   year = {2025},   note = {R package version 2.5},   url = {https://nasserdr.github.io/digiRhythm/}, }"},{"path":[]},{"path":"https://nasserdr.github.io/digiRhythm/index.html","id":"digirhythm","dir":"","previous_headings":"","what":"digiRhythm","title":"Analyzing Animal's Rhythmicity","text":"digiRhythm R library developed Agroscope provides set tools analyze visualize rhythmic behavior animals. mainly focuses Degree Functional Coupling (0 < DFC < 1), measure used several scientists assess welfare animals. library also provides tools compute diurnality index, visualize actogram average activity. repository contains updated version library, CRAN package vignettes found CRAN. library still development working adding functionalities . suggestions want contribute library, please feel free contact us. Email: hassan-roland.nasser@agroscope.admin.ch hassan.nasser@.com","code":""},{"path":"https://nasserdr.github.io/digiRhythm/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Analyzing Animal's Rhythmicity","text":"can install development version GitHub :","code":"#Uncomment the below two lines if you use the library for the first time of if #you want to update the library #install.packages(\"devtools\") #devtools::install_github(\"nasserdr/digiRhythm\", dependencies = TRUE)"},{"path":"https://nasserdr.github.io/digiRhythm/index.html","id":"examples","dir":"","previous_headings":"","what":"Examples:","title":"Analyzing Animal's Rhythmicity","text":"can access examples vignettes provided along package, either package website Vignettes: Website Vignettes","code":""},{"path":"https://nasserdr.github.io/digiRhythm/reference/actogram.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot a an single actogram over a period of time for a specific variable — actogram","title":"Plot a an single actogram over a period of time for a specific variable — actogram","text":"Takes activity dataset input plot save actogram specified activity column","code":""},{"path":"https://nasserdr.github.io/digiRhythm/reference/actogram.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot a an single actogram over a period of time for a specific variable — actogram","text":"","code":"actogram(df, activity, activity_alias, start, end, save = \"actogram\")"},{"path":"https://nasserdr.github.io/digiRhythm/reference/actogram.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot a an single actogram over a period of time for a specific variable — actogram","text":"df dataframe containing activity data activity name activity activity_alias string containing name activity shown graph. start start day (\"%Y-%m-%d\" format). end end day (\"%Y-%m-%d\" format). save NULL, image saved. Otherwise, parameter name saved image. contain path name without extension.","code":""},{"path":"https://nasserdr.github.io/digiRhythm/reference/actogram.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot a an single actogram over a period of time for a specific variable — actogram","text":"ggplot2 object contains actogram plot","code":""},{"path":"https://nasserdr.github.io/digiRhythm/reference/actogram.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot a an single actogram over a period of time for a specific variable — actogram","text":"","code":"data(\"df516b_2\") df <- df516b_2 activity <- names(df)[2] start <- \"2020-05-01\" # year-month-day end <- \"2020-08-13\" # year-month-day activity_alias <- \"Motion Index\" my_actogram <- actogram(df, activity, activity_alias, start, end,   save = NULL )  print(my_actogram)"},{"path":"https://nasserdr.github.io/digiRhythm/reference/daily_activity_wrap_plot.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot daily average over a period of time for a specific variable. — daily_activity_wrap_plot","title":"Plot daily average over a period of time for a specific variable. — daily_activity_wrap_plot","text":"Takes activity dataset input plot save daily average specified activity column","code":""},{"path":"https://nasserdr.github.io/digiRhythm/reference/daily_activity_wrap_plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot daily average over a period of time for a specific variable. — daily_activity_wrap_plot","text":"","code":"daily_activity_wrap_plot(   df,   activity,   activity_alias,   start,   end,   sampling_rate,   ncols,   save = \"daily_wrap_plot\" )"},{"path":"https://nasserdr.github.io/digiRhythm/reference/daily_activity_wrap_plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot daily average over a period of time for a specific variable. — daily_activity_wrap_plot","text":"df dataframe containing activity data activity name activity activity_alias string containing name activity shown graph. start start day (\"%Y-%m-%d\" format). end end day (\"%Y-%m-%d\" format). sampling_rate sampling rate data. ncols number columns spread graphs . name saved image. contain path name without extension. save NULL, image saved. Otherwise, parameter ","code":""},{"path":"https://nasserdr.github.io/digiRhythm/reference/daily_activity_wrap_plot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot daily average over a period of time for a specific variable. — daily_activity_wrap_plot","text":"ggplot2 object contains daily average activity plot","code":""},{"path":"https://nasserdr.github.io/digiRhythm/reference/daily_activity_wrap_plot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot daily average over a period of time for a specific variable. — daily_activity_wrap_plot","text":"","code":"data(\"df516b_2\") df <- df516b_2 activity <- names(df)[2] activity_alias <- \"Motion Index\" start <- \"2020-05-01\" # year-month-day end <- \"2020-05-07\" # year-month-day ncols <- 3 sampling_rate <- 30 my_dwp <- daily_activity_wrap_plot(   df, activity, activity_alias, start, end, sampling_rate,   ncols ) #> Warning: Removed 336 rows containing non-finite outside the scale range #> (`stat_align()`)."},{"path":"https://nasserdr.github.io/digiRhythm/reference/daily_average_activity.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot daily average over a period of time for a specific variable. — daily_average_activity","title":"Plot daily average over a period of time for a specific variable. — daily_average_activity","text":"Takes activity dataset input plot save daily average specified activity column","code":""},{"path":"https://nasserdr.github.io/digiRhythm/reference/daily_average_activity.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot daily average over a period of time for a specific variable. — daily_average_activity","text":"","code":"daily_average_activity(df, activity, activity_alias, start, end, save)"},{"path":"https://nasserdr.github.io/digiRhythm/reference/daily_average_activity.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot daily average over a period of time for a specific variable. — daily_average_activity","text":"df dataframe containing activity data activity name activity activity_alias string containing name activity shown graph. start start day (\"%Y-%m-%d\" format). end end day (\"%Y-%m-%d\" format). save NULL, image saved. Otherwise, parameter name saved image. contain path name without extension.","code":""},{"path":"https://nasserdr.github.io/digiRhythm/reference/daily_average_activity.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot daily average over a period of time for a specific variable. — daily_average_activity","text":"None","code":""},{"path":"https://nasserdr.github.io/digiRhythm/reference/daily_average_activity.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot daily average over a period of time for a specific variable. — daily_average_activity","text":"","code":"data(\"df516b_2\") df <- df516b_2 activity <- names(df)[2] start <- \"2020-05-01\" # year-month-day end <- \"2020-08-13\" # year-month-day activity_alias <- \"Motion Index\" my_daa <- daily_average_activity(df, activity, activity_alias, start, end,   save = NULL )  print(my_daa)"},{"path":"https://nasserdr.github.io/digiRhythm/reference/df516b_2.html","id":null,"dir":"Reference","previous_headings":"","what":"df516b_2 Activity Data Sets — df516b_2","title":"df516b_2 Activity Data Sets — df516b_2","text":"dataset containing Motion index steps count cow. data set sampled 15 minutes samples. data follows:","code":""},{"path":"https://nasserdr.github.io/digiRhythm/reference/df516b_2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"df516b_2 Activity Data Sets — df516b_2","text":"","code":"df516b_2"},{"path":"https://nasserdr.github.io/digiRhythm/reference/df516b_2.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"df516b_2 Activity Data Sets — df516b_2","text":"data frame 3 columns datetime POSIX formatted datetime Motion.Index motion index cow time sample Steps number steps time sample","code":""},{"path":"https://nasserdr.github.io/digiRhythm/reference/df516b_2.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"df516b_2 Activity Data Sets — df516b_2","text":"Agroscope Tanikon","code":""},{"path":"https://nasserdr.github.io/digiRhythm/reference/df603.html","id":null,"dir":"Reference","previous_headings":"","what":"df603 Activity Data Sets — df603","title":"df603 Activity Data Sets — df603","text":"dataset containing x y acceleration accelerometer installed cattle. missing days dataset. data set sampled 15 minutes samples. data follows:","code":""},{"path":"https://nasserdr.github.io/digiRhythm/reference/df603.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"df603 Activity Data Sets — df603","text":"","code":"df603"},{"path":"https://nasserdr.github.io/digiRhythm/reference/df603.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"df603 Activity Data Sets — df603","text":"data frame 3 columns datetime POSIX formatted datetime move_x acceleration along x axis move_y acceleration along y axis","code":""},{"path":"https://nasserdr.github.io/digiRhythm/reference/df603.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"df603 Activity Data Sets — df603","text":"Agroscope Posieux","code":""},{"path":"https://nasserdr.github.io/digiRhythm/reference/df625.html","id":null,"dir":"Reference","previous_headings":"","what":"df625 Activity Data Sets — df625","title":"df625 Activity Data Sets — df625","text":"dataset containing x y acceleration accelerometer installed cattle. missing days dataset. data set sampled 15 minutes samples. data follows:","code":""},{"path":"https://nasserdr.github.io/digiRhythm/reference/df625.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"df625 Activity Data Sets — df625","text":"","code":"df625"},{"path":"https://nasserdr.github.io/digiRhythm/reference/df625.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"df625 Activity Data Sets — df625","text":"data frame 3 columns datetime POSIX formatted datetime move_x acceleration along x axis move_y acceleration along y axis","code":""},{"path":"https://nasserdr.github.io/digiRhythm/reference/df625.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"df625 Activity Data Sets — df625","text":"Agroscope Posieux","code":""},{"path":"https://nasserdr.github.io/digiRhythm/reference/df678_2.html","id":null,"dir":"Reference","previous_headings":"","what":"df678_2 Activity Data Sets — df678_2","title":"df678_2 Activity Data Sets — df678_2","text":"dataset containing Motion index steps count cow. data set sampled 15 minutes samples. data follows:","code":""},{"path":"https://nasserdr.github.io/digiRhythm/reference/df678_2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"df678_2 Activity Data Sets — df678_2","text":"","code":"df678_2"},{"path":"https://nasserdr.github.io/digiRhythm/reference/df678_2.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"df678_2 Activity Data Sets — df678_2","text":"data frame 3 columns datetime POSIX formatted datetime Motion.Index motion index cow time sample Steps number steps time sample","code":""},{"path":"https://nasserdr.github.io/digiRhythm/reference/df678_2.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"df678_2 Activity Data Sets — df678_2","text":"Agroscope Tanikon","code":""},{"path":"https://nasserdr.github.io/digiRhythm/reference/df689b_3.html","id":null,"dir":"Reference","previous_headings":"","what":"df689b_3 Activity Data Sets — df689b_3","title":"df689b_3 Activity Data Sets — df689b_3","text":"dataset containing Motion index steps count cow. data set sampled 15 minutes samples. data follows:","code":""},{"path":"https://nasserdr.github.io/digiRhythm/reference/df689b_3.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"df689b_3 Activity Data Sets — df689b_3","text":"","code":"df689b_3"},{"path":"https://nasserdr.github.io/digiRhythm/reference/df689b_3.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"df689b_3 Activity Data Sets — df689b_3","text":"data frame 3 columns datetime POSIX formatted datetime Motion.Index motion index cow time sample Steps number steps time sample","code":""},{"path":"https://nasserdr.github.io/digiRhythm/reference/df689b_3.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"df689b_3 Activity Data Sets — df689b_3","text":"Agroscope Tanikon","code":""},{"path":"https://nasserdr.github.io/digiRhythm/reference/df691b_1.html","id":null,"dir":"Reference","previous_headings":"","what":"df691b_1 Activity Data Sets — df691b_1","title":"df691b_1 Activity Data Sets — df691b_1","text":"dataset containing Motion index steps count cow. data set sampled 15 minutes samples. data follows:","code":""},{"path":"https://nasserdr.github.io/digiRhythm/reference/df691b_1.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"df691b_1 Activity Data Sets — df691b_1","text":"","code":"df691b_1"},{"path":"https://nasserdr.github.io/digiRhythm/reference/df691b_1.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"df691b_1 Activity Data Sets — df691b_1","text":"data frame 3 columns datetime POSIX formatted datetime Motion.Index motion index cow time sample Steps number steps time sample","code":""},{"path":"https://nasserdr.github.io/digiRhythm/reference/df691b_1.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"df691b_1 Activity Data Sets — df691b_1","text":"Agroscope Tanikon","code":""},{"path":"https://nasserdr.github.io/digiRhythm/reference/df759a_3.html","id":null,"dir":"Reference","previous_headings":"","what":"df759a_3 Activity Data Sets — df759a_3","title":"df759a_3 Activity Data Sets — df759a_3","text":"dataset containing Motion index steps count cow. data set sampled 15 minutes samples. data follows:","code":""},{"path":"https://nasserdr.github.io/digiRhythm/reference/df759a_3.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"df759a_3 Activity Data Sets — df759a_3","text":"","code":"df759a_3"},{"path":"https://nasserdr.github.io/digiRhythm/reference/df759a_3.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"df759a_3 Activity Data Sets — df759a_3","text":"data frame 3 columns datetime POSIX formatted datetime Motion.Index motion index cow time sample Steps number steps time sample","code":""},{"path":"https://nasserdr.github.io/digiRhythm/reference/df759a_3.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"df759a_3 Activity Data Sets — df759a_3","text":"Agroscope Tanikon","code":""},{"path":"https://nasserdr.github.io/digiRhythm/reference/df_act_info.html","id":null,"dir":"Reference","previous_headings":"","what":"Outputs some information about the activity dataframe — df_act_info","title":"Outputs some information about the activity dataframe — df_act_info","text":"Outputs information activity dataframe","code":""},{"path":"https://nasserdr.github.io/digiRhythm/reference/df_act_info.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Outputs some information about the activity dataframe — df_act_info","text":"","code":"df_act_info(df)"},{"path":"https://nasserdr.github.io/digiRhythm/reference/df_act_info.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Outputs some information about the activity dataframe — df_act_info","text":"df dataframe containing activity data","code":""},{"path":"https://nasserdr.github.io/digiRhythm/reference/df_act_info.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Outputs some information about the activity dataframe — df_act_info","text":"return value. Prints head tail well starting end date digiRhythm friendly dataframe.","code":""},{"path":"https://nasserdr.github.io/digiRhythm/reference/dfc.html","id":null,"dir":"Reference","previous_headings":"","what":"Computes the Degree of Function coupling (DFC), Harmonic Part (HP) and Weekly Lomb-Scargle Spectrum (LSP Spec) for one variable in an activity dataset. The dataset should be digiRhythm friendly. — dfc","title":"Computes the Degree of Function coupling (DFC), Harmonic Part (HP) and Weekly Lomb-Scargle Spectrum (LSP Spec) for one variable in an activity dataset. The dataset should be digiRhythm friendly. — dfc","text":"computation DFC/HP/LSP parameters done using rolling window. rolling window 7 days, first, compute parameters Days 1-7 , days 2-8 ). window 7 days, function compute LSP spectrum determine power frequency. Using Baluev (2008), compute significance amplitude frequency component determine whether significant . , significant frequencies, whose amplitudes' summation denominated SUMSIG. Among available frequencies, harmonic (correspond waves period 24h, 12h, 24h/3, 24h/4, ...). result, frequency components significant harmonic, whose powers' summation called SSH (sum significant harmonic). summation frequency components frequency reflecting 24h period called SUMALL. Therefore, DFC HP computed follows:","code":""},{"path":"https://nasserdr.github.io/digiRhythm/reference/dfc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Computes the Degree of Function coupling (DFC), Harmonic Part (HP) and Weekly Lomb-Scargle Spectrum (LSP Spec) for one variable in an activity dataset. The dataset should be digiRhythm friendly. — dfc","text":"","code":"dfc(   data,   activity,   sampling = 15,   alpha = 0.05,   harm_cutoff = 12,   rolling_window = 7,   plot = TRUE,   plot_harmonic_part = TRUE,   verbose = TRUE,   plot_lsp = TRUE )"},{"path":"https://nasserdr.github.io/digiRhythm/reference/dfc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Computes the Degree of Function coupling (DFC), Harmonic Part (HP) and Weekly Lomb-Scargle Spectrum (LSP Spec) for one variable in an activity dataset. The dataset should be digiRhythm friendly. — dfc","text":"data activity data set. activity name activity. sampling sampling period data set minutes. Lomb Scargle Periodogram computed. alpha significance level used determine significant frequency component. harm_cutoff order highest harmonic needed considered. integer equal 1, 2, 3, ... Default 12. rolling_window rolling window used compute LSP. Default 7 days. plot TRUE, DFC/HP plot shown. plot_harmonic_part TRUE, shows harmonic part DFC plot verbose TRUE, print weekly progress. plot_lsp TRUE, LSP sliding week plotted","code":""},{"path":"https://nasserdr.github.io/digiRhythm/reference/dfc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Computes the Degree of Function coupling (DFC), Harmonic Part (HP) and Weekly Lomb-Scargle Spectrum (LSP Spec) for one variable in an activity dataset. The dataset should be digiRhythm friendly. — dfc","text":"list containing 2 dataframe. DFC dataframe contain results DFC computation SPEC Dataframe contains result spectrum computation. DFC contains 3 columns: ** date format YYYY-MM-DD. ** DFC computed using @rolling_window days. ** Harmonic Part (ratio). Data supposed sampled specific smpling rate. sampling rate given argument @sampling Missing days permitted. data half day, removed.","code":""},{"path":"https://nasserdr.github.io/digiRhythm/reference/dfc.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Computes the Degree of Function coupling (DFC), Harmonic Part (HP) and Weekly Lomb-Scargle Spectrum (LSP Spec) for one variable in an activity dataset. The dataset should be digiRhythm friendly. — dfc","text":"DFC <- SSH / SUMSIG HP <- SSH / SUMALL","code":""},{"path":"https://nasserdr.github.io/digiRhythm/reference/dfc.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Computes the Degree of Function coupling (DFC), Harmonic Part (HP) and Weekly Lomb-Scargle Spectrum (LSP Spec) for one variable in an activity dataset. The dataset should be digiRhythm friendly. — dfc","text":"","code":"sampling_period <- 15 * 60 # seconds two_weeks <- 2 * 7 * 24 * 60 * 60 # seconds amplitude_24h <- 5 amplitude_12h <- 3 noise_sd <- 2 time_seq <- seq(0, two_weeks, by = sampling_period) time_posix <- as.POSIXct(time_seq, origin = \"1970-01-01\") sine_24h <- amplitude_24h * sin(2 * pi * time_seq / (24 * 60 * 60)) sine_12h <- amplitude_12h * sin(2 * pi * time_seq / (12 * 60 * 60)) noise <- rnorm(length(time_seq), mean = 0, sd = noise_sd) data <- sine_24h + sine_12h + noise df <- data.frame(time = time_posix, value = data) names(df) <- c(\"datetime\", \"activity\") print(str(df)) #> 'data.frame':\t1345 obs. of  2 variables: #>  $ datetime: POSIXct, format: \"1970-01-01 00:00:00\" \"1970-01-01 00:15:00\" ... #>  $ activity: num  -2.8 1.23 -3.45 2.11 4.04 ... #> NULL my_lsp <- dfc(df, \"activity\", alpha = 0.05, harm_cutoff = 12, plot = TRUE) #>              datetime  activity #> 1 1970-01-01 00:00:00 -2.800087 #> 2 1970-01-01 00:15:00  1.229228 #> 3 1970-01-01 00:30:00 -3.445439 #> 4 1970-01-01 00:45:00  2.112359 #> 5 1970-01-01 01:00:00  4.037201 #> 6 1970-01-01 01:15:00  5.730305 #> [1] 7 #> Processing dates  1970-01-01  until  1970-01-07  #> v Correct time format: First column has a POSIXct Format  #> v Number of days good for DFC: 7 days >= 2 days  #> v Correct numeric format - Column 2 ==> activity  #> The data is digiRhythm friendly   #>         from         to dfc                hp #> 1 1970-01-01 1970-01-07   1 0.926751063253253 #> Processing dates  1970-01-02  until  1970-01-08  #> v Correct time format: First column has a POSIXct Format  #> v Number of days good for DFC: 7 days >= 2 days  #> v Correct numeric format - Column 2 ==> activity  #> The data is digiRhythm friendly   #>         from         to dfc                hp #> 2 1970-01-02 1970-01-08   1 0.930778742658236 #> Processing dates  1970-01-03  until  1970-01-09  #> v Correct time format: First column has a POSIXct Format  #> v Number of days good for DFC: 7 days >= 2 days  #> v Correct numeric format - Column 2 ==> activity  #> The data is digiRhythm friendly   #>         from         to dfc                hp #> 3 1970-01-03 1970-01-09   1 0.926485524819562 #> Processing dates  1970-01-04  until  1970-01-10  #> v Correct time format: First column has a POSIXct Format  #> v Number of days good for DFC: 7 days >= 2 days  #> v Correct numeric format - Column 2 ==> activity  #> The data is digiRhythm friendly   #>         from         to dfc                hp #> 4 1970-01-04 1970-01-10   1 0.924585352413831 #> Processing dates  1970-01-05  until  1970-01-11  #> v Correct time format: First column has a POSIXct Format  #> v Number of days good for DFC: 7 days >= 2 days  #> v Correct numeric format - Column 2 ==> activity  #> The data is digiRhythm friendly   #>         from         to dfc                hp #> 5 1970-01-05 1970-01-11   1 0.916675184571833 #> Processing dates  1970-01-06  until  1970-01-12  #> v Correct time format: First column has a POSIXct Format  #> v Number of days good for DFC: 7 days >= 2 days  #> v Correct numeric format - Column 2 ==> activity  #> The data is digiRhythm friendly   #>         from         to dfc                hp #> 6 1970-01-06 1970-01-12   1 0.920137037581897 #> Processing dates  1970-01-07  until  1970-01-13  #> v Correct time format: First column has a POSIXct Format  #> v Number of days good for DFC: 7 days >= 2 days  #> v Correct numeric format - Column 2 ==> activity  #> The data is digiRhythm friendly   #>         from         to dfc                hp #> 7 1970-01-07 1970-01-13   1 0.914420347701569"},{"path":"https://nasserdr.github.io/digiRhythm/reference/dgm_periodicity.html","id":null,"dir":"Reference","previous_headings":"","what":"Returns the periodicity of a digiRhythm dataframe — dgm_periodicity","title":"Returns the periodicity of a digiRhythm dataframe — dgm_periodicity","text":"Returns periodicity digiRhythm dataframe","code":""},{"path":"https://nasserdr.github.io/digiRhythm/reference/dgm_periodicity.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Returns the periodicity of a digiRhythm dataframe — dgm_periodicity","text":"","code":"dgm_periodicity(data)"},{"path":"https://nasserdr.github.io/digiRhythm/reference/dgm_periodicity.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Returns the periodicity of a digiRhythm dataframe — dgm_periodicity","text":"data digiRhythm friendly dataframe","code":""},{"path":"https://nasserdr.github.io/digiRhythm/reference/dgm_periodicity.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Returns the periodicity of a digiRhythm dataframe — dgm_periodicity","text":"returns periodicity object type xts.","code":""},{"path":"https://nasserdr.github.io/digiRhythm/reference/dgm_periodicity.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Returns the periodicity of a digiRhythm dataframe — dgm_periodicity","text":"","code":"data(\"df516b_2\", package = \"digiRhythm\") df <- df516b_2 dgm_periodicity(df) #> 15 minute periodicity from 2020-05-01 to 2020-06-14 23:45:00"},{"path":"https://nasserdr.github.io/digiRhythm/reference/diurnality.html","id":null,"dir":"Reference","previous_headings":"","what":"Computes the diurnality index based on an activity dataframe — diurnality","title":"Computes the diurnality index based on an activity dataframe — diurnality","text":"Computes diurnality index based activity dataframe","code":""},{"path":"https://nasserdr.github.io/digiRhythm/reference/diurnality.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Computes the diurnality index based on an activity dataframe — diurnality","text":"","code":"diurnality(   data,   activity,   day_time = c(\"06:30:00\", \"16:30:00\"),   night_time = c(\"18:00:00\", \"T05:00:00\"),   save = NULL )"},{"path":"https://nasserdr.github.io/digiRhythm/reference/diurnality.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Computes the diurnality index based on an activity dataframe — diurnality","text":"data digiRhythm-friendly dataset activity number non-useful lines skip (lines header) day_time array containing start end day period. Default: c(\"06:30:00\", \"16:30:00\"). night_time array containing start end night period. Default: c(\"18:00:00\", \"T05:00:00\"). save NULL, image saved. Otherwise, parameter name saved image. contain path name without extension.","code":""},{"path":"https://nasserdr.github.io/digiRhythm/reference/diurnality.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Computes the diurnality index based on an activity dataframe — diurnality","text":"ggplot2 object contains diurnality plot addition dataframe 2 col: date diurnality index","code":""},{"path":"https://nasserdr.github.io/digiRhythm/reference/diurnality.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Computes the diurnality index based on an activity dataframe — diurnality","text":"","code":"data(\"df516b_2\", package = \"digiRhythm\") data <- df516b_2 data <- remove_activity_outliers(data) activity <- names(data)[2] d_index <- diurnality(data, activity)"},{"path":"https://nasserdr.github.io/digiRhythm/reference/diurnality_customTimes.html","id":null,"dir":"Reference","previous_headings":"","what":"Computes the diurnality index, using different start and end definitions for each day and night, based on an activity dataframe — diurnality_customTimes","title":"Computes the diurnality index, using different start and end definitions for each day and night, based on an activity dataframe — diurnality_customTimes","text":"Computes diurnality index, using different start end definitions day night, based activity dataframe","code":""},{"path":"https://nasserdr.github.io/digiRhythm/reference/diurnality_customTimes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Computes the diurnality index, using different start and end definitions for each day and night, based on an activity dataframe — diurnality_customTimes","text":"","code":"diurnality_customTimes(data, activity, timedata, save = NULL)"},{"path":"https://nasserdr.github.io/digiRhythm/reference/diurnality_customTimes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Computes the diurnality index, using different start and end definitions for each day and night, based on an activity dataframe — diurnality_customTimes","text":"data digiRhythm-friendly dataset activity number non-useful lines skip (lines header) timedata dataset, including 4 columns POSIXct format, including date time \"day_start\", \"day_end\", \"night_start\", \"night_end\" save NULL, image saved. Otherwise, parameter name saved image. contain path name without extension.","code":""},{"path":"https://nasserdr.github.io/digiRhythm/reference/diurnality_customTimes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Computes the diurnality index, using different start and end definitions for each day and night, based on an activity dataframe — diurnality_customTimes","text":"ggplot2 object contains Sliding diurnality plot addition dataframe 2 col: date sliding diurnality index","code":""},{"path":"https://nasserdr.github.io/digiRhythm/reference/diurnality_customTimes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Computes the diurnality index, using different start and end definitions for each day and night, based on an activity dataframe — diurnality_customTimes","text":"","code":"data(\"df516b_2\", package = \"digiRhythm\") data <- df516b_2 data <- remove_activity_outliers(data) activity <- names(data)[2] data(\"timedata\", package = \"digiRhythm\") timedata <- timedata d_index <- diurnality_customTimes(data, activity, timedata)"},{"path":"https://nasserdr.github.io/digiRhythm/reference/highest_possible_harm_cutoff.html","id":null,"dir":"Reference","previous_headings":"","what":"Function to calculate the smallest possible harmonic to consider given a sampling frequency. The minimum possible harmonic = 2 x the period of the maximum frequency according to the Shanon theorem. Example: if the sampling period is 15 min, the minimum possible treatable period is 30 minutes and that corresponds to the 48th harmonic (24 hours * 60 minutes / 48 = 30 minutes) — highest_possible_harm_cutoff","title":"Function to calculate the smallest possible harmonic to consider given a sampling frequency. The minimum possible harmonic = 2 x the period of the maximum frequency according to the Shanon theorem. Example: if the sampling period is 15 min, the minimum possible treatable period is 30 minutes and that corresponds to the 48th harmonic (24 hours * 60 minutes / 48 = 30 minutes) — highest_possible_harm_cutoff","text":"Function calculate smallest possible harmonic consider given sampling frequency. minimum possible harmonic = 2 x period maximum frequency according Shanon theorem. Example: sampling period 15 min, minimum possible treatable period 30 minutes corresponds 48th harmonic (24 hours * 60 minutes / 48 = 30 minutes)","code":""},{"path":"https://nasserdr.github.io/digiRhythm/reference/highest_possible_harm_cutoff.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function to calculate the smallest possible harmonic to consider given a sampling frequency. The minimum possible harmonic = 2 x the period of the maximum frequency according to the Shanon theorem. Example: if the sampling period is 15 min, the minimum possible treatable period is 30 minutes and that corresponds to the 48th harmonic (24 hours * 60 minutes / 48 = 30 minutes) — highest_possible_harm_cutoff","text":"","code":"highest_possible_harm_cutoff(sampling_period_in_minutes)"},{"path":"https://nasserdr.github.io/digiRhythm/reference/highest_possible_harm_cutoff.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function to calculate the smallest possible harmonic to consider given a sampling frequency. The minimum possible harmonic = 2 x the period of the maximum frequency according to the Shanon theorem. Example: if the sampling period is 15 min, the minimum possible treatable period is 30 minutes and that corresponds to the 48th harmonic (24 hours * 60 minutes / 48 = 30 minutes) — highest_possible_harm_cutoff","text":"sampling_period_in_minutes sampling period acquired data minutes","code":""},{"path":"https://nasserdr.github.io/digiRhythm/reference/highest_possible_harm_cutoff.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function to calculate the smallest possible harmonic to consider given a sampling frequency. The minimum possible harmonic = 2 x the period of the maximum frequency according to the Shanon theorem. Example: if the sampling period is 15 min, the minimum possible treatable period is 30 minutes and that corresponds to the 48th harmonic (24 hours * 60 minutes / 48 = 30 minutes) — highest_possible_harm_cutoff","text":"Returns smallest possible harmonic (24 hours) consider given sampling frequency.","code":""},{"path":"https://nasserdr.github.io/digiRhythm/reference/import_raw_activity_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Reads Raw Activity Data from csv files — import_raw_activity_data","title":"Reads Raw Activity Data from csv files — import_raw_activity_data","text":"Reads Activity Data (data, time, activity(ies)) CSV file can skip lines (usually representing metadata) select specific activities.","code":""},{"path":"https://nasserdr.github.io/digiRhythm/reference/import_raw_activity_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reads Raw Activity Data from csv files — import_raw_activity_data","text":"","code":"import_raw_activity_data(   filename,   skipLines = 0,   act.cols.names = c(\"Date\", \"Time\", \"Motion Index\", \"Steps\"),   date_format = \"%d.%m.%Y\",   time_format = \"%H:%M:%S\",   sep = \",\",   original_tz = \"CET\",   target_tz = \"CET\",   sampling = 15,   trim_first_day = TRUE,   trim_middle_days = TRUE,   trim_last_day = TRUE,   verbose = FALSE )"},{"path":"https://nasserdr.github.io/digiRhythm/reference/import_raw_activity_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reads Raw Activity Data from csv files — import_raw_activity_data","text":"filename file name (full relative path extension) skipLines number non-useful lines skip (lines header) act.cols.names vector containing names columns read (specific activity columns) date_format POSIX format Date column (first column) time_format POSIX format Time column (second column) sep delimiter/separator columns original_tz time zone datetime encoded target_tz time zone want process data. Setting argument 'GMT' help coping daylight saving time changes occur two time year. sampling sampling frequency minutes (default 15 min) trim_first_day True, removes data first day contains less 80% expected data points. trim_middle_days True, removes data MIDDLE days contain less 80% expected data points. trim_last_day True, removes data last day contains less 80% expected data points. verbose print useful information execution function","code":""},{"path":"https://nasserdr.github.io/digiRhythm/reference/import_raw_activity_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Reads Raw Activity Data from csv files — import_raw_activity_data","text":"dataframe datetime column activity columns, ready used functions digirhythm","code":""},{"path":"https://nasserdr.github.io/digiRhythm/reference/import_raw_activity_data.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Reads Raw Activity Data from csv files — import_raw_activity_data","text":"function prepare data stored csv compatible digiRhythm package. possibility skip first lines choose columns read. also possibility sample data. can also choose whether remove partial days (data full day present) trimming last, middle last days. function expects first second columns respectively date time format mentioned. file <- file.path('data', 'sample_data') colstoread <- c(\"Date\", \"Time\", \"Motion Index\", 'Steps') #colums interested data <- improt_raw_icetag_data(filename = file, skipLines = 7, act.cols.names = colstoread, sampling = 15, verbose = TRUE)","code":""},{"path":"https://nasserdr.github.io/digiRhythm/reference/import_raw_activity_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Reads Raw Activity Data from csv files — import_raw_activity_data","text":"","code":"filename <- system.file(\"extdata\", \"sample_data.csv\", package = \"digiRhythm\") data <- import_raw_activity_data(   filename,   skipLines = 7,   act.cols.names = c(\"Date\", \"Time\", \"Motion Index\", \"Steps\"),   sep = \",\",   original_tz = \"CET\",   target_tz = \"CET\",   date_format = \"%d.%m.%Y\",   time_format = \"%H:%M:%S\",   sampling = 15,   trim_first_day = TRUE,   trim_middle_days = TRUE,   trim_last_day = TRUE,   verbose = TRUE ) #> [1] \"Reading the CSV file /home/runner/work/_temp/Library/digiRhythm/extdata/sample_data.csv\" #> Removing the following columns because they are not numeric #> [1] \"First data points ... \" #>              datetime Motion.Index Steps #> 1 2020-04-30 11:19:47            0     0 #> 2 2020-04-30 11:20:00            6     0 #> 3 2020-04-30 11:21:00            0     0 #> [1] \"Last data point ... \" #>              datetime Motion.Index Steps #> 1 2020-05-16 06:08:00            0     0 #> 2 2020-05-16 06:07:00            0     0 #> 3 2020-05-16 06:06:00            0     0 #> [1] \"Minimum Required number of samples per day 76\" #> [1] \"Returning a data frame with datetime colum and 2 variable colums\" #> [1] \"Total number of samples is 1440 - Total number of days is 15\" print(head(data)) #>              datetime Motion.Index Steps #> 1 2020-05-01 00:00:00           47    22 #> 2 2020-05-01 00:15:00            8     5 #> 3 2020-05-01 00:30:00           43    14 #> 4 2020-05-01 00:45:00            5     1 #> 5 2020-05-01 01:00:00            3     0 #> 6 2020-05-01 01:15:00            0     0"},{"path":"https://nasserdr.github.io/digiRhythm/reference/is_dgm_friendly.html","id":null,"dir":"Reference","previous_headings":"","what":"Informs if a dataset is digiRhythm Friendly — is_dgm_friendly","title":"Informs if a dataset is digiRhythm Friendly — is_dgm_friendly","text":"Takes activity dataset input gives information 1) dataset digiRhythm friendly, .e., functions used can work dataset 2) Tells wrong, .","code":""},{"path":"https://nasserdr.github.io/digiRhythm/reference/is_dgm_friendly.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Informs if a dataset is digiRhythm Friendly — is_dgm_friendly","text":"","code":"is_dgm_friendly(data, verbose = FALSE)"},{"path":"https://nasserdr.github.io/digiRhythm/reference/is_dgm_friendly.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Informs if a dataset is digiRhythm Friendly — is_dgm_friendly","text":"data dataframe containing activity data verbose TRUE, prints info dataset","code":""},{"path":"https://nasserdr.github.io/digiRhythm/reference/is_dgm_friendly.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Informs if a dataset is digiRhythm Friendly — is_dgm_friendly","text":"Boolean. True, dataframe digirhythm friendly. False, dataframe digirhythm friendly.","code":""},{"path":"https://nasserdr.github.io/digiRhythm/reference/is_dgm_friendly.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Informs if a dataset is digiRhythm Friendly — is_dgm_friendly","text":"","code":"data(\"df516b_2\", package = \"digiRhythm\") d <- df516b_2 is_dgm_friendly(data = d, verbose = TRUE) #> v Correct time format: First column has a POSIXct Format  #> v Number of days good for DFC: 46 days >= 2 days  #> v Correct numeric format - Column 2 ==> Motion.Index  #> v Correct numeric format - Column 3 ==> Steps  #> The data is digiRhythm friendly  #> [1] TRUE"},{"path":"https://nasserdr.github.io/digiRhythm/reference/levopt.html","id":null,"dir":"Reference","previous_headings":"","what":"Returns the level given the p-value computed with pbaluev (2008). Copied from the LOMB library. — levopt","title":"Returns the level given the p-value computed with pbaluev (2008). Copied from the LOMB library. — levopt","text":"Returns level given p-value computed pbaluev (2008). Copied LOMB library.","code":""},{"path":"https://nasserdr.github.io/digiRhythm/reference/levopt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Returns the level given the p-value computed with pbaluev (2008). Copied from the LOMB library. — levopt","text":"","code":"levopt(Z, alpha, fmax, tm)"},{"path":"https://nasserdr.github.io/digiRhythm/reference/levopt.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Returns the level given the p-value computed with pbaluev (2008). Copied from the LOMB library. — levopt","text":"Z power frequency alpha significance level fmax maximum frequency spectrum tm time grid original time series","code":""},{"path":"https://nasserdr.github.io/digiRhythm/reference/levopt.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Returns the level given the p-value computed with pbaluev (2008). Copied from the LOMB library. — levopt","text":"Returns level given p-value computed pbaluev (2008).","code":""},{"path":"https://nasserdr.github.io/digiRhythm/reference/lomb_scargle_periodogram.html","id":null,"dir":"Reference","previous_headings":"","what":"Computes the Lomb Scargle Periodogram and returns the information needed for computing the DFC and HP. A plot visualizing the Harmonic Frequencies presence in the spectrum is possible. The function is inspired from the Lomb library in a great part, with modifications to fit the requirements of harmonic powers and computation of the DFC. This function is inspired by the lsp function from the lomb package and adapted to add different colors for harmonic and non harmonic frequencies in the signal. For more information about lomb::lsp, please refer to: https://cran.r-project.org/web/packages/lomb/ — lomb_scargle_periodogram","title":"Computes the Lomb Scargle Periodogram and returns the information needed for computing the DFC and HP. A plot visualizing the Harmonic Frequencies presence in the spectrum is possible. The function is inspired from the Lomb library in a great part, with modifications to fit the requirements of harmonic powers and computation of the DFC. This function is inspired by the lsp function from the lomb package and adapted to add different colors for harmonic and non harmonic frequencies in the signal. For more information about lomb::lsp, please refer to: https://cran.r-project.org/web/packages/lomb/ — lomb_scargle_periodogram","text":"Computes Lomb Scargle Periodogram returns information needed computing DFC HP. plot visualizing Harmonic Frequencies presence spectrum possible. function inspired Lomb library great part, modifications fit requirements harmonic powers computation DFC. function inspired lsp function lomb package adapted add different colors harmonic non harmonic frequencies signal. information lomb::lsp, please refer : https://cran.r-project.org/web/packages/lomb/","code":""},{"path":"https://nasserdr.github.io/digiRhythm/reference/lomb_scargle_periodogram.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Computes the Lomb Scargle Periodogram and returns the information needed for computing the DFC and HP. A plot visualizing the Harmonic Frequencies presence in the spectrum is possible. The function is inspired from the Lomb library in a great part, with modifications to fit the requirements of harmonic powers and computation of the DFC. This function is inspired by the lsp function from the lomb package and adapted to add different colors for harmonic and non harmonic frequencies in the signal. For more information about lomb::lsp, please refer to: https://cran.r-project.org/web/packages/lomb/ — lomb_scargle_periodogram","text":"","code":"lomb_scargle_periodogram(   data,   alpha = 0.01,   harm_cutoff = 12,   sampling = 15,   plot = TRUE,   extra_info_plot = TRUE )"},{"path":"https://nasserdr.github.io/digiRhythm/reference/lomb_scargle_periodogram.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Computes the Lomb Scargle Periodogram and returns the information needed for computing the DFC and HP. A plot visualizing the Harmonic Frequencies presence in the spectrum is possible. The function is inspired from the Lomb library in a great part, with modifications to fit the requirements of harmonic powers and computation of the DFC. This function is inspired by the lsp function from the lomb package and adapted to add different colors for harmonic and non harmonic frequencies in the signal. For more information about lomb::lsp, please refer to: https://cran.r-project.org/web/packages/lomb/ — lomb_scargle_periodogram","text":"data digiRhythm friendly dataframe two columns alpha statistical significance false alarm harm_cutoff order highest harmonic needed considered. integer equal 1, 2, 3, ... Default 12. sampling sampling period minutes. default = 15 min. plot TRUE, LSP plotted extra_info_plot True, extra information shown plot","code":""},{"path":"https://nasserdr.github.io/digiRhythm/reference/lomb_scargle_periodogram.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Computes the Lomb Scargle Periodogram and returns the information needed for computing the DFC and HP. A plot visualizing the Harmonic Frequencies presence in the spectrum is possible. The function is inspired from the Lomb library in a great part, with modifications to fit the requirements of harmonic powers and computation of the DFC. This function is inspired by the lsp function from the lomb package and adapted to add different colors for harmonic and non harmonic frequencies in the signal. For more information about lomb::lsp, please refer to: https://cran.r-project.org/web/packages/lomb/ — lomb_scargle_periodogram","text":"list contains dataframe (detailed ), significance level significance (record). dataframe contains power frequency, frequency HZ, p values according Baluev 2008, period corresponds frequency seconds hours finally, boolean tell whether frequency harmonic .","code":""},{"path":"https://nasserdr.github.io/digiRhythm/reference/lomb_scargle_periodogram.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Computes the Lomb Scargle Periodogram and returns the information needed for computing the DFC and HP. A plot visualizing the Harmonic Frequencies presence in the spectrum is possible. The function is inspired from the Lomb library in a great part, with modifications to fit the requirements of harmonic powers and computation of the DFC. This function is inspired by the lsp function from the lomb package and adapted to add different colors for harmonic and non harmonic frequencies in the signal. For more information about lomb::lsp, please refer to: https://cran.r-project.org/web/packages/lomb/ — lomb_scargle_periodogram","text":"","code":"data(\"df516b_2\", package = \"digiRhythm\") data <- df516b_2[1:672, c(1, 2)] lomb_scargle_periodogram(data, alpha = 0.01, harm_cutof = 12, plot = TRUE) #> v Correct time format: First column has a POSIXct Format  #> v Number of days good for DFC: 8 days >= 2 days  #> v Correct numeric format - Column 2 ==> Motion.Index  #> The data is digiRhythm friendly   #> $lsp_data #>            power frequency_hz     p_values period_seconds period_hours #> 1   1.949738e-02 1.655903e-06 7.067284e-01     603900.000  167.7500000 #> 2   5.863859e-02 3.311807e-06 2.620367e-06     301950.000   83.8750000 #> 3   1.973503e-02 4.967710e-06 6.795805e-01     201300.000   55.9166667 #> 4   2.639932e-03 6.623613e-06 1.000000e+00     150975.000   41.9375000 #> 5   4.699498e-03 8.279516e-06 1.000000e+00     120780.000   33.5500000 #> 6   1.147349e-02 9.935420e-06 9.999994e-01     100650.000   27.9583333 #> 7   1.258023e-02 1.157407e-05 9.999668e-01      86400.000   24.0000000 #> 8   6.120115e-04 1.324723e-05 1.000000e+00      75487.500   20.9687500 #> 9   2.035247e-03 1.490313e-05 1.000000e+00      67100.000   18.6388889 #> 10  5.228099e-03 1.655903e-05 1.000000e+00      60390.000   16.7750000 #> 11  6.112617e-04 1.821494e-05 1.000000e+00      54900.000   15.2500000 #> 12  8.423956e-03 1.987084e-05 1.000000e+00      50325.000   13.9791667 #> 13  3.440709e-03 2.152674e-05 1.000000e+00      46453.846   12.9038462 #> 14  5.382327e-02 2.314815e-05 1.379963e-05      43200.000   12.0000000 #> 15  8.871460e-03 2.483855e-05 1.000000e+00      40260.000   11.1833333 #> 16  4.847841e-03 2.649445e-05 1.000000e+00      37743.750   10.4843750 #> 17  2.438776e-03 2.815036e-05 1.000000e+00      35523.529    9.8676471 #> 18  6.076683e-03 2.980626e-05 1.000000e+00      33550.000    9.3194444 #> 19  1.670693e-03 3.146216e-05 1.000000e+00      31784.211    8.8289474 #> 20  7.192570e-03 3.311807e-05 1.000000e+00      30195.000    8.3875000 #> 21  1.410451e-03 3.472222e-05 1.000000e+00      28800.000    8.0000000 #> 22  2.973471e-03 3.642987e-05 1.000000e+00      27450.000    7.6250000 #> 23  5.457799e-03 3.808578e-05 1.000000e+00      26256.522    7.2934783 #> 24  6.162212e-03 3.974168e-05 1.000000e+00      25162.500    6.9895833 #> 25  2.065631e-03 4.139758e-05 1.000000e+00      24156.000    6.7100000 #> 26  7.820111e-04 4.305349e-05 1.000000e+00      23226.923    6.4519231 #> 27  1.162568e-06 4.470939e-05 9.999996e-01      22366.667    6.2129630 #> 28  1.782713e-02 4.629630e-05 8.739420e-01      21600.000    6.0000000 #> 29  1.054697e-02 4.802120e-05 1.000000e+00      20824.138    5.7844828 #> 30  7.282269e-05 4.967710e-05 1.000000e+00      20130.000    5.5916667 #> 31  9.957376e-03 5.133300e-05 1.000000e+00      19480.645    5.4112903 #> 32  9.230637e-04 5.298891e-05 1.000000e+00      18871.875    5.2421875 #> 33  4.418211e-03 5.464481e-05 1.000000e+00      18300.000    5.0833333 #> 34  7.859956e-03 5.630071e-05 1.000000e+00      17761.765    4.9338235 #> 35  1.244740e-02 5.787037e-05 9.999781e-01      17280.000    4.8000000 #> 36  1.180961e-02 5.961252e-05 9.999977e-01      16775.000    4.6597222 #> 37  5.660723e-04 6.126842e-05 1.000000e+00      16321.622    4.5337838 #> 38  1.402384e-03 6.292433e-05 1.000000e+00      15892.105    4.4144737 #> 39  3.898606e-04 6.458023e-05 1.000000e+00      15484.615    4.3012821 #> 40  1.102459e-03 6.623613e-05 1.000000e+00      15097.500    4.1937500 #> 41  4.489148e-03 6.789204e-05 1.000000e+00      14729.268    4.0914634 #> 42  7.176985e-03 6.944444e-05 1.000000e+00      14400.000    4.0000000 #> 43  1.853826e-02 7.120384e-05 8.094945e-01      14044.186    3.9011628 #> 44  4.338406e-03 7.285974e-05 1.000000e+00      13725.000    3.8125000 #> 45  1.746961e-03 7.451565e-05 1.000000e+00      13420.000    3.7277778 #> 46  1.635276e-03 7.617155e-05 1.000000e+00      13128.261    3.6467391 #> 47  1.110743e-03 7.782745e-05 1.000000e+00      12848.936    3.5691489 #> 48  1.257094e-02 7.948336e-05 9.999678e-01      12581.250    3.4947917 #> 49  1.317377e-02 8.101852e-05 9.998220e-01      12342.857    3.4285714 #> 50  2.026576e-02 8.279516e-05 6.180537e-01      12078.000    3.3550000 #> 51  1.311187e-03 8.445107e-05 1.000000e+00      11841.176    3.2892157 #> 52  3.973563e-03 8.610697e-05 1.000000e+00      11613.462    3.2259615 #> 53  5.152999e-04 8.776287e-05 1.000000e+00      11394.340    3.1650943 #> 54  5.374309e-04 8.941878e-05 1.000000e+00      11183.333    3.1064815 #> 55  2.400026e-03 9.107468e-05 1.000000e+00      10980.000    3.0500000 #> 56  1.808465e-03 9.259259e-05 1.000000e+00      10800.000    3.0000000 #> 57  3.929410e-03 9.438649e-05 1.000000e+00      10594.737    2.9429825 #> 58  2.521832e-03 9.604239e-05 1.000000e+00      10412.069    2.8922414 #> 59  6.225697e-04 9.769829e-05 1.000000e+00      10235.593    2.8432203 #> 60  1.269823e-03 9.935420e-05 1.000000e+00      10065.000    2.7958333 #> 61  6.215825e-05 1.010101e-04 1.000000e+00       9900.000    2.7500000 #> 62  4.773500e-03 1.026660e-04 1.000000e+00       9740.323    2.7056452 #> 63  2.571283e-03 1.041667e-04 1.000000e+00       9600.000    2.6666667 #> 64  6.267085e-03 1.059778e-04 1.000000e+00       9435.938    2.6210938 #> 65  6.154406e-04 1.076337e-04 1.000000e+00       9290.769    2.5807692 #> 66  2.898954e-03 1.092896e-04 1.000000e+00       9150.000    2.5416667 #> 67  9.206992e-04 1.109455e-04 1.000000e+00       9013.433    2.5037313 #> 68  9.422765e-04 1.126014e-04 1.000000e+00       8880.882    2.4669118 #> 69  2.470550e-03 1.142573e-04 1.000000e+00       8752.174    2.4311594 #> 70  8.588091e-03 1.157407e-04 1.000000e+00       8640.000    2.4000000 #> 71  4.472912e-03 1.175691e-04 1.000000e+00       8505.634    2.3626761 #> 72  3.161721e-03 1.192250e-04 1.000000e+00       8387.500    2.3298611 #> 73  1.377539e-03 1.208809e-04 1.000000e+00       8272.603    2.2979452 #> 74  2.725289e-03 1.225368e-04 1.000000e+00       8160.811    2.2668919 #> 75  5.945807e-04 1.241927e-04 1.000000e+00       8052.000    2.2366667 #> 76  4.864276e-03 1.258487e-04 1.000000e+00       7946.053    2.2072368 #> 77  2.181169e-02 1.273148e-04 4.452353e-01       7854.545    2.1818182 #> 78  1.778396e-02 1.291605e-04 8.774332e-01       7742.308    2.1506410 #> 79  1.120058e-02 1.308164e-04 9.999998e-01       7644.304    2.1234177 #> 80  3.670120e-03 1.324723e-04 1.000000e+00       7548.750    2.0968750 #> 81  7.633410e-03 1.341282e-04 1.000000e+00       7455.556    2.0709877 #> 82  3.172743e-03 1.357841e-04 1.000000e+00       7364.634    2.0457317 #> 83  4.720151e-04 1.374400e-04 1.000000e+00       7275.904    2.0210843 #> 84  5.527715e-04 1.388889e-04 1.000000e+00       7200.000    2.0000000 #> 85  1.087688e-04 1.407518e-04 1.000000e+00       7104.706    1.9735294 #> 86  3.359656e-05 1.424077e-04 1.000000e+00       7022.093    1.9505814 #> 87  2.118620e-03 1.440636e-04 1.000000e+00       6941.379    1.9281609 #> 88  1.306799e-03 1.457195e-04 1.000000e+00       6862.500    1.9062500 #> 89  1.251706e-03 1.473754e-04 1.000000e+00       6785.393    1.8848315 #> 90  5.631534e-03 1.490313e-04 1.000000e+00       6710.000    1.8638889 #> 91  8.089134e-03 1.506872e-04 1.000000e+00       6636.264    1.8434066 #> 92  1.257268e-02 1.523431e-04 9.999676e-01       6564.130    1.8233696 #> 93  8.610740e-03 1.539990e-04 1.000000e+00       6493.548    1.8037634 #> 94  3.262307e-04 1.556549e-04 1.000000e+00       6424.468    1.7845745 #> 95  2.574944e-03 1.573108e-04 1.000000e+00       6356.842    1.7657895 #> 96  1.266262e-03 1.589667e-04 1.000000e+00       6290.625    1.7473958 #> 97  4.156000e-03 1.606226e-04 1.000000e+00       6225.773    1.7293814 #> 98  6.300667e-04 1.622785e-04 1.000000e+00       6162.245    1.7117347 #> 99  8.629278e-03 1.639344e-04 1.000000e+00       6100.000    1.6944444 #> 100 1.639699e-03 1.655903e-04 1.000000e+00       6039.000    1.6775000 #> 101 1.812579e-03 1.672462e-04 1.000000e+00       5979.208    1.6608911 #> 102 7.433398e-04 1.689021e-04 1.000000e+00       5920.588    1.6446078 #> 103 5.697204e-04 1.705580e-04 1.000000e+00       5863.107    1.6286408 #> 104 3.377574e-04 1.722139e-04 1.000000e+00       5806.731    1.6129808 #> 105 3.882357e-03 1.738698e-04 1.000000e+00       5751.429    1.5976190 #> 106 1.882659e-03 1.755257e-04 1.000000e+00       5697.170    1.5825472 #> 107 4.349592e-03 1.771817e-04 1.000000e+00       5643.925    1.5677570 #> 108 3.198290e-03 1.788376e-04 1.000000e+00       5591.667    1.5532407 #> 109 1.813122e-02 1.804935e-04 8.479223e-01       5540.367    1.5389908 #> 110 2.565606e-04 1.821494e-04 1.000000e+00       5490.000    1.5250000 #> 111 1.517410e-02 1.838053e-04 9.909471e-01       5440.541    1.5112613 #> 112 2.296331e-04 1.854612e-04 1.000000e+00       5391.964    1.4977679 #> 113 9.501336e-03 1.871171e-04 1.000000e+00       5344.248    1.4845133 #> 114 3.326424e-03 1.887730e-04 1.000000e+00       5297.368    1.4714912 #> 115 1.358901e-03 1.904289e-04 1.000000e+00       5251.304    1.4586957 #> 116 2.389897e-03 1.920848e-04 1.000000e+00       5206.034    1.4461207 #> 117 2.219681e-03 1.937407e-04 1.000000e+00       5161.538    1.4337607 #> 118 3.238770e-04 1.953966e-04 1.000000e+00       5117.797    1.4216102 #> 119 1.675181e-04 1.970525e-04 1.000000e+00       5074.790    1.4096639 #> 120 9.513401e-04 1.987084e-04 1.000000e+00       5032.500    1.3979167 #> 121 1.095249e-04 2.003643e-04 1.000000e+00       4990.909    1.3863636 #> 122 3.713120e-03 2.020202e-04 1.000000e+00       4950.000    1.3750000 #> 123 9.314812e-03 2.036761e-04 1.000000e+00       4909.756    1.3638211 #> 124 8.898630e-04 2.053320e-04 1.000000e+00       4870.161    1.3528226 #> 125 2.397975e-03 2.069879e-04 1.000000e+00       4831.200    1.3420000 #> 126 1.726025e-03 2.086438e-04 1.000000e+00       4792.857    1.3313492 #> 127 7.449048e-03 2.102997e-04 1.000000e+00       4755.118    1.3208661 #> 128 7.070109e-04 2.119556e-04 1.000000e+00       4717.969    1.3105469 #> 129 4.371644e-03 2.136115e-04 1.000000e+00       4681.395    1.3003876 #> 130 1.416254e-03 2.152674e-04 1.000000e+00       4645.385    1.2903846 #> 131 1.026119e-03 2.169233e-04 1.000000e+00       4609.924    1.2805344 #> 132 1.852427e-03 2.185792e-04 1.000000e+00       4575.000    1.2708333 #> 133 1.475229e-05 2.202351e-04 1.000000e+00       4540.602    1.2612782 #> 134 2.068885e-03 2.218910e-04 1.000000e+00       4506.716    1.2518657 #> 135 1.452654e-03 2.235469e-04 1.000000e+00       4473.333    1.2425926 #> 136 1.598897e-03 2.252028e-04 1.000000e+00       4440.441    1.2334559 #> 137 4.554440e-04 2.268588e-04 1.000000e+00       4408.029    1.2244526 #> 138 2.308606e-04 2.285147e-04 1.000000e+00       4376.087    1.2155797 #> 139 2.772401e-03 2.301706e-04 1.000000e+00       4344.604    1.2068345 #> 140 1.977592e-04 2.318265e-04 1.000000e+00       4313.571    1.1982143 #> 141 3.988316e-03 2.334824e-04 1.000000e+00       4282.979    1.1897163 #> 142 9.414138e-04 2.351383e-04 1.000000e+00       4252.817    1.1813380 #> 143 3.871836e-03 2.367942e-04 1.000000e+00       4223.077    1.1730769 #> 144 2.219722e-03 2.384501e-04 1.000000e+00       4193.750    1.1649306 #> 145 2.456836e-04 2.401060e-04 1.000000e+00       4164.828    1.1568966 #> 146 1.663350e-04 2.417619e-04 1.000000e+00       4136.301    1.1489726 #> 147 2.058559e-04 2.434178e-04 1.000000e+00       4108.163    1.1411565 #> 148 3.647968e-04 2.450737e-04 1.000000e+00       4080.405    1.1334459 #> 149 5.678235e-04 2.467296e-04 1.000000e+00       4053.020    1.1258389 #> 150 9.799097e-05 2.483855e-04 1.000000e+00       4026.000    1.1183333 #> 151 4.077124e-06 2.500414e-04 1.000000e+00       3999.338    1.1109272 #> 152 6.882554e-04 2.516973e-04 1.000000e+00       3973.026    1.1036184 #> 153 6.678952e-04 2.533532e-04 1.000000e+00       3947.059    1.0964052 #> 154 1.525997e-03 2.550091e-04 1.000000e+00       3921.429    1.0892857 #> 155 4.310646e-04 2.566650e-04 1.000000e+00       3896.129    1.0822581 #> 156 6.285787e-04 2.583209e-04 1.000000e+00       3871.154    1.0753205 #> 157 1.104507e-03 2.599768e-04 1.000000e+00       3846.497    1.0684713 #> 158 3.058885e-03 2.616327e-04 1.000000e+00       3822.152    1.0617089 #> 159 5.886480e-04 2.632886e-04 1.000000e+00       3798.113    1.0550314 #> 160 2.725481e-03 2.649445e-04 1.000000e+00       3774.375    1.0484375 #> 161 3.278611e-04 2.666004e-04 1.000000e+00       3750.932    1.0419255 #> 162 9.983286e-04 2.682563e-04 1.000000e+00       3727.778    1.0354938 #> 163 8.076665e-04 2.699122e-04 1.000000e+00       3704.908    1.0291411 #> 164 4.992675e-03 2.715681e-04 1.000000e+00       3682.317    1.0228659 #> 165 6.078002e-04 2.732240e-04 1.000000e+00       3660.000    1.0166667 #> 166 1.911966e-03 2.748799e-04 1.000000e+00       3637.952    1.0105422 #> 167 4.835897e-04 2.765359e-04 1.000000e+00       3616.168    1.0044910 #> 168 2.195964e-04 2.781918e-04 1.000000e+00       3594.643    0.9985119 #> 169 4.952076e-04 2.798477e-04 1.000000e+00       3573.373    0.9926036 #> 170 1.833503e-03 2.815036e-04 1.000000e+00       3552.353    0.9867647 #> 171 5.796572e-04 2.831595e-04 1.000000e+00       3531.579    0.9809942 #> 172 1.493758e-03 2.848154e-04 1.000000e+00       3511.047    0.9752907 #> 173 5.487519e-04 2.864713e-04 1.000000e+00       3490.751    0.9696532 #> 174 5.867682e-04 2.881272e-04 1.000000e+00       3470.690    0.9640805 #> 175 2.485870e-04 2.897831e-04 1.000000e+00       3450.857    0.9585714 #> 176 4.003956e-04 2.914390e-04 1.000000e+00       3431.250    0.9531250 #> 177 1.389183e-03 2.930949e-04 1.000000e+00       3411.864    0.9477401 #> 178 5.272835e-03 2.947508e-04 1.000000e+00       3392.697    0.9424157 #> 179 8.422952e-04 2.964067e-04 1.000000e+00       3373.743    0.9371508 #> 180 1.012959e-03 2.980626e-04 1.000000e+00       3355.000    0.9319444 #> 181 2.365742e-03 2.997185e-04 1.000000e+00       3336.464    0.9267956 #> 182 1.434647e-03 3.013744e-04 1.000000e+00       3318.132    0.9217033 #> 183 1.632008e-03 3.030303e-04 1.000000e+00       3300.000    0.9166667 #> 184 7.287467e-03 3.046862e-04 1.000000e+00       3282.065    0.9116848 #> 185 1.395720e-04 3.063421e-04 1.000000e+00       3264.324    0.9067568 #> 186 2.166454e-03 3.079980e-04 1.000000e+00       3246.774    0.9018817 #> 187 2.647951e-04 3.096539e-04 1.000000e+00       3229.412    0.8970588 #> 188 2.779003e-03 3.113098e-04 1.000000e+00       3212.234    0.8922872 #> 189 1.211152e-03 3.129657e-04 1.000000e+00       3195.238    0.8875661 #> 190 4.166590e-03 3.146216e-04 1.000000e+00       3178.421    0.8828947 #> 191 1.951505e-04 3.162775e-04 1.000000e+00       3161.780    0.8782723 #> 192 1.493818e-03 3.179334e-04 1.000000e+00       3145.312    0.8736979 #> 193 6.340482e-04 3.195893e-04 1.000000e+00       3129.016    0.8691710 #> 194 7.807273e-04 3.212452e-04 1.000000e+00       3112.887    0.8646907 #> 195 1.851177e-06 3.229011e-04 9.999999e-01       3096.923    0.8602564 #> 196 5.429108e-04 3.245570e-04 1.000000e+00       3081.122    0.8558673 #> 197 7.349314e-04 3.262129e-04 1.000000e+00       3065.482    0.8515228 #> 198 3.875177e-03 3.278689e-04 1.000000e+00       3050.000    0.8472222 #> 199 2.250413e-04 3.295248e-04 1.000000e+00       3034.673    0.8429648 #> 200 5.878637e-04 3.311807e-04 1.000000e+00       3019.500    0.8387500 #> 201 4.898652e-05 3.328366e-04 1.000000e+00       3004.478    0.8345771 #> 202 7.695928e-04 3.344925e-04 1.000000e+00       2989.604    0.8304455 #> 203 2.872049e-03 3.361484e-04 1.000000e+00       2974.877    0.8263547 #> 204 4.240461e-03 3.378043e-04 1.000000e+00       2960.294    0.8223039 #> 205 1.007379e-04 3.394602e-04 1.000000e+00       2945.854    0.8182927 #> 206 2.668586e-04 3.411161e-04 1.000000e+00       2931.553    0.8143204 #> 207 5.748827e-04 3.427720e-04 1.000000e+00       2917.391    0.8103865 #> 208 1.366048e-03 3.444279e-04 1.000000e+00       2903.365    0.8064904 #> 209 2.744939e-04 3.460838e-04 1.000000e+00       2889.474    0.8026316 #> 210 2.171558e-03 3.477397e-04 1.000000e+00       2875.714    0.7988095 #> 211 2.679224e-04 3.493956e-04 1.000000e+00       2862.085    0.7950237 #> 212 1.983846e-03 3.510515e-04 1.000000e+00       2848.585    0.7912736 #> 213 3.497188e-03 3.527074e-04 1.000000e+00       2835.211    0.7875587 #> 214 5.625435e-05 3.543633e-04 1.000000e+00       2821.963    0.7838785 #> 215 8.259057e-04 3.560192e-04 1.000000e+00       2808.837    0.7802326 #> 216 5.787932e-05 3.576751e-04 1.000000e+00       2795.833    0.7766204 #> 217 9.150680e-05 3.593310e-04 1.000000e+00       2782.949    0.7730415 #> 218 7.332990e-04 3.609869e-04 1.000000e+00       2770.183    0.7694954 #> 219 2.795767e-04 3.626428e-04 1.000000e+00       2757.534    0.7659817 #> 220 2.525007e-03 3.642987e-04 1.000000e+00       2745.000    0.7625000 #> 221 1.366402e-03 3.659546e-04 1.000000e+00       2732.579    0.7590498 #> 222 3.442786e-03 3.676105e-04 1.000000e+00       2720.270    0.7556306 #> 223 2.895661e-03 3.692664e-04 1.000000e+00       2708.072    0.7522422 #> 224 2.593277e-03 3.709223e-04 1.000000e+00       2695.982    0.7488839 #> 225 1.603386e-03 3.725782e-04 1.000000e+00       2684.000    0.7455556 #> 226 3.346638e-03 3.742341e-04 1.000000e+00       2672.124    0.7422566 #> 227 1.211976e-03 3.758900e-04 1.000000e+00       2660.352    0.7389868 #> 228 4.541612e-05 3.775460e-04 1.000000e+00       2648.684    0.7357456 #> 229 1.084156e-03 3.792019e-04 1.000000e+00       2637.118    0.7325328 #> 230 6.641652e-04 3.808578e-04 1.000000e+00       2625.652    0.7293478 #> 231 7.188121e-04 3.825137e-04 1.000000e+00       2614.286    0.7261905 #> 232 6.688427e-04 3.841696e-04 1.000000e+00       2603.017    0.7230603 #> 233 1.070650e-03 3.858255e-04 1.000000e+00       2591.845    0.7199571 #> 234 5.330767e-04 3.874814e-04 1.000000e+00       2580.769    0.7168803 #> 235 5.325480e-05 3.891373e-04 1.000000e+00       2569.787    0.7138298 #> 236 2.001704e-03 3.907932e-04 1.000000e+00       2558.898    0.7108051 #> 237 3.302959e-04 3.924491e-04 1.000000e+00       2548.101    0.7078059 #> 238 5.403876e-03 3.941050e-04 1.000000e+00       2537.395    0.7048319 #> 239 9.324620e-04 3.957609e-04 1.000000e+00       2526.778    0.7018828 #> 240 3.116440e-04 3.974168e-04 1.000000e+00       2516.250    0.6989583 #> 241 3.277806e-03 3.990727e-04 1.000000e+00       2505.809    0.6960581 #> 242 3.831890e-03 4.007286e-04 1.000000e+00       2495.455    0.6931818 #> 243 4.135963e-03 4.023845e-04 1.000000e+00       2485.185    0.6903292 #> 244 4.639536e-03 4.040404e-04 1.000000e+00       2475.000    0.6875000 #> 245 2.439850e-03 4.056963e-04 1.000000e+00       2464.898    0.6846939 #> 246 1.103006e-03 4.073522e-04 1.000000e+00       2454.878    0.6819106 #> 247 1.060414e-03 4.090081e-04 1.000000e+00       2444.939    0.6791498 #> 248 7.062677e-04 4.106640e-04 1.000000e+00       2435.081    0.6764113 #> 249 2.710680e-03 4.123199e-04 1.000000e+00       2425.301    0.6736948 #> 250 1.069309e-03 4.139758e-04 1.000000e+00       2415.600    0.6710000 #> 251 8.629711e-04 4.156317e-04 1.000000e+00       2405.976    0.6683267 #> 252 7.290835e-04 4.172876e-04 1.000000e+00       2396.429    0.6656746 #> 253 1.916265e-04 4.189435e-04 1.000000e+00       2386.957    0.6630435 #> 254 3.974219e-04 4.205994e-04 1.000000e+00       2377.559    0.6604331 #> 255 2.292776e-03 4.222553e-04 1.000000e+00       2368.235    0.6578431 #> 256 5.637606e-03 4.239112e-04 1.000000e+00       2358.984    0.6552734 #> 257 2.928097e-03 4.255671e-04 1.000000e+00       2349.805    0.6527237 #> 258 2.604923e-03 4.272231e-04 1.000000e+00       2340.698    0.6501938 #> 259 6.112654e-04 4.288790e-04 1.000000e+00       2331.660    0.6476834 #> 260 1.310107e-03 4.305349e-04 1.000000e+00       2322.692    0.6451923 #> 261 4.424730e-04 4.321908e-04 1.000000e+00       2313.793    0.6427203 #> 262 1.450611e-03 4.338467e-04 1.000000e+00       2304.962    0.6402672 #> 263 2.021213e-03 4.355026e-04 1.000000e+00       2296.198    0.6378327 #> 264 7.816507e-04 4.371585e-04 1.000000e+00       2287.500    0.6354167 #> 265 5.064661e-04 4.388144e-04 1.000000e+00       2278.868    0.6330189 #> 266 9.598068e-05 4.404703e-04 1.000000e+00       2270.301    0.6306391 #> 267 1.051828e-04 4.421262e-04 1.000000e+00       2261.798    0.6282772 #> 268 6.808676e-04 4.437821e-04 1.000000e+00       2253.358    0.6259328 #> 269 9.448038e-04 4.454380e-04 1.000000e+00       2244.981    0.6236059 #> 270 3.978137e-04 4.470939e-04 1.000000e+00       2236.667    0.6212963 #> 271 8.826286e-04 4.487498e-04 1.000000e+00       2228.413    0.6190037 #> 272 1.569424e-03 4.504057e-04 1.000000e+00       2220.221    0.6167279 #> 273 9.149094e-04 4.520616e-04 1.000000e+00       2212.088    0.6144689 #> 274 9.196100e-04 4.537175e-04 1.000000e+00       2204.015    0.6122263 #> 275 9.454523e-04 4.553734e-04 1.000000e+00       2196.000    0.6100000 #> 276 1.898571e-03 4.570293e-04 1.000000e+00       2188.043    0.6077899 #> 277 3.045595e-03 4.586852e-04 1.000000e+00       2180.144    0.6055957 #> 278 1.565367e-03 4.603411e-04 1.000000e+00       2172.302    0.6034173 #> 279 6.035780e-04 4.619970e-04 1.000000e+00       2164.516    0.6012545 #> 280 1.067753e-03 4.636529e-04 1.000000e+00       2156.786    0.5991071 #> 281 1.235253e-03 4.653088e-04 1.000000e+00       2149.110    0.5969751 #> 282 9.421942e-04 4.669647e-04 1.000000e+00       2141.489    0.5948582 #> 283 3.584927e-04 4.686206e-04 1.000000e+00       2133.922    0.5927562 #> 284 1.966893e-03 4.702765e-04 1.000000e+00       2126.408    0.5906690 #> 285 4.384283e-05 4.719324e-04 1.000000e+00       2118.947    0.5885965 #> 286 8.818984e-04 4.735883e-04 1.000000e+00       2111.538    0.5865385 #> 287 2.140392e-03 4.752442e-04 1.000000e+00       2104.181    0.5844948 #> 288 5.863284e-04 4.769001e-04 1.000000e+00       2096.875    0.5824653 #> 289 8.423088e-04 4.785561e-04 1.000000e+00       2089.619    0.5804498 #> 290 1.209121e-03 4.802120e-04 1.000000e+00       2082.414    0.5784483 #> 291 2.022992e-03 4.818679e-04 1.000000e+00       2075.258    0.5764605 #> 292 2.037534e-03 4.835238e-04 1.000000e+00       2068.151    0.5744863 #> 293 1.483796e-04 4.851797e-04 1.000000e+00       2061.092    0.5725256 #> 294 2.140369e-03 4.868356e-04 1.000000e+00       2054.082    0.5705782 #> 295 7.303919e-04 4.884915e-04 1.000000e+00       2047.119    0.5686441 #> 296 7.028396e-05 4.901474e-04 1.000000e+00       2040.203    0.5667230 #> 297 1.068292e-03 4.918033e-04 1.000000e+00       2033.333    0.5648148 #> 298 6.928554e-04 4.934592e-04 1.000000e+00       2026.510    0.5629195 #> 299 1.193940e-03 4.951151e-04 1.000000e+00       2019.732    0.5610368 #> 300 8.310246e-04 4.967710e-04 1.000000e+00       2013.000    0.5591667 #> 301 2.347139e-03 4.984269e-04 1.000000e+00       2006.312    0.5573090 #> 302 6.081673e-04 5.000828e-04 1.000000e+00       1999.669    0.5554636 #> 303 8.162872e-04 5.017387e-04 1.000000e+00       1993.069    0.5536304 #> 304 6.569431e-04 5.033946e-04 1.000000e+00       1986.513    0.5518092 #> 305 2.193440e-04 5.050505e-04 1.000000e+00       1980.000    0.5500000 #> 306 1.832403e-03 5.067064e-04 1.000000e+00       1973.529    0.5482026 #> 307 5.930825e-04 5.083623e-04 1.000000e+00       1967.101    0.5464169 #> 308 2.253876e-04 5.100182e-04 1.000000e+00       1960.714    0.5446429 #> 309 8.712588e-04 5.116741e-04 1.000000e+00       1954.369    0.5428803 #> 310 3.708787e-04 5.133300e-04 1.000000e+00       1948.065    0.5411290 #> 311 6.551585e-05 5.149859e-04 1.000000e+00       1941.801    0.5393891 #> 312 1.108335e-03 5.166418e-04 1.000000e+00       1935.577    0.5376603 #> 313 5.921024e-05 5.182977e-04 1.000000e+00       1929.393    0.5359425 #> 314 3.034422e-03 5.199536e-04 1.000000e+00       1923.248    0.5342357 #> 315 3.806244e-03 5.216095e-04 1.000000e+00       1917.143    0.5325397 #> 316 4.730746e-03 5.232654e-04 1.000000e+00       1911.076    0.5308544 #> 317 7.382288e-04 5.249213e-04 1.000000e+00       1905.047    0.5291798 #> 318 3.381538e-04 5.265772e-04 1.000000e+00       1899.057    0.5275157 #> 319 1.413915e-03 5.282332e-04 1.000000e+00       1893.103    0.5258621 #> 320 4.793925e-03 5.298891e-04 1.000000e+00       1887.188    0.5242187 #> 321 2.487293e-03 5.315450e-04 1.000000e+00       1881.308    0.5225857 #> 322 1.594162e-03 5.332009e-04 1.000000e+00       1875.466    0.5209627 #> 323 4.009491e-03 5.348568e-04 1.000000e+00       1869.659    0.5193498 #> 324 1.105000e-04 5.365127e-04 1.000000e+00       1863.889    0.5177469 #> 325 3.744444e-04 5.381686e-04 1.000000e+00       1858.154    0.5161538 #> 326 1.099463e-04 5.398245e-04 1.000000e+00       1852.454    0.5145706 #> 327 7.163958e-04 5.414804e-04 1.000000e+00       1846.789    0.5129969 #> 328 1.185648e-03 5.431363e-04 1.000000e+00       1841.159    0.5114329 #> 329 3.446074e-03 5.447922e-04 1.000000e+00       1835.562    0.5098784 #> 330 1.419163e-03 5.464481e-04 1.000000e+00       1830.000    0.5083333 #> 331 1.405836e-03 5.481040e-04 1.000000e+00       1824.471    0.5067976 #> 332 2.068373e-04 5.497599e-04 1.000000e+00       1818.976    0.5052711 #> 333 1.672394e-03 5.514158e-04 1.000000e+00       1813.514    0.5037538 #> 334 6.217931e-03 5.530717e-04 1.000000e+00       1808.084    0.5022455 #> 335 2.756293e-03 5.547276e-04 1.000000e+00       1802.687    0.5007463 #> 336 2.756293e-03 5.563835e-04 1.000000e+00       1797.321    0.4992560 #>     status_harmonic #> 1      Non-Harmonic #> 2      Non-Harmonic #> 3      Non-Harmonic #> 4      Non-Harmonic #> 5      Non-Harmonic #> 6      Non-Harmonic #> 7          Harmonic #> 8      Non-Harmonic #> 9      Non-Harmonic #> 10     Non-Harmonic #> 11     Non-Harmonic #> 12     Non-Harmonic #> 13     Non-Harmonic #> 14         Harmonic #> 15     Non-Harmonic #> 16     Non-Harmonic #> 17     Non-Harmonic #> 18     Non-Harmonic #> 19     Non-Harmonic #> 20     Non-Harmonic #> 21         Harmonic #> 22     Non-Harmonic #> 23     Non-Harmonic #> 24     Non-Harmonic #> 25     Non-Harmonic #> 26     Non-Harmonic #> 27     Non-Harmonic #> 28         Harmonic #> 29     Non-Harmonic #> 30     Non-Harmonic #> 31     Non-Harmonic #> 32     Non-Harmonic #> 33     Non-Harmonic #> 34     Non-Harmonic #> 35         Harmonic #> 36     Non-Harmonic #> 37     Non-Harmonic #> 38     Non-Harmonic #> 39     Non-Harmonic #> 40     Non-Harmonic #> 41     Non-Harmonic #> 42         Harmonic #> 43     Non-Harmonic #> 44     Non-Harmonic #> 45     Non-Harmonic #> 46     Non-Harmonic #> 47     Non-Harmonic #> 48     Non-Harmonic #> 49         Harmonic #> 50     Non-Harmonic #> 51     Non-Harmonic #> 52     Non-Harmonic #> 53     Non-Harmonic #> 54     Non-Harmonic #> 55     Non-Harmonic #> 56         Harmonic #> 57     Non-Harmonic #> 58     Non-Harmonic #> 59     Non-Harmonic #> 60     Non-Harmonic #> 61     Non-Harmonic #> 62     Non-Harmonic #> 63         Harmonic #> 64     Non-Harmonic #> 65     Non-Harmonic #> 66     Non-Harmonic #> 67     Non-Harmonic #> 68     Non-Harmonic #> 69     Non-Harmonic #> 70         Harmonic #> 71     Non-Harmonic #> 72     Non-Harmonic #> 73     Non-Harmonic #> 74     Non-Harmonic #> 75     Non-Harmonic #> 76     Non-Harmonic #> 77         Harmonic #> 78     Non-Harmonic #> 79     Non-Harmonic #> 80     Non-Harmonic #> 81     Non-Harmonic #> 82     Non-Harmonic #> 83     Non-Harmonic #> 84         Harmonic #> 85     Non-Harmonic #> 86     Non-Harmonic #> 87     Non-Harmonic #> 88     Non-Harmonic #> 89     Non-Harmonic #> 90     Non-Harmonic #> 91     Non-Harmonic #> 92     Non-Harmonic #> 93     Non-Harmonic #> 94     Non-Harmonic #> 95     Non-Harmonic #> 96     Non-Harmonic #> 97     Non-Harmonic #> 98     Non-Harmonic #> 99     Non-Harmonic #> 100    Non-Harmonic #> 101    Non-Harmonic #> 102    Non-Harmonic #> 103    Non-Harmonic #> 104    Non-Harmonic #> 105    Non-Harmonic #> 106    Non-Harmonic #> 107    Non-Harmonic #> 108    Non-Harmonic #> 109    Non-Harmonic #> 110    Non-Harmonic #> 111    Non-Harmonic #> 112    Non-Harmonic #> 113    Non-Harmonic #> 114    Non-Harmonic #> 115    Non-Harmonic #> 116    Non-Harmonic #> 117    Non-Harmonic #> 118    Non-Harmonic #> 119    Non-Harmonic #> 120    Non-Harmonic #> 121    Non-Harmonic #> 122    Non-Harmonic #> 123    Non-Harmonic #> 124    Non-Harmonic #> 125    Non-Harmonic #> 126    Non-Harmonic #> 127    Non-Harmonic #> 128    Non-Harmonic #> 129    Non-Harmonic #> 130    Non-Harmonic #> 131    Non-Harmonic #> 132    Non-Harmonic #> 133    Non-Harmonic #> 134    Non-Harmonic #> 135    Non-Harmonic #> 136    Non-Harmonic #> 137    Non-Harmonic #> 138    Non-Harmonic #> 139    Non-Harmonic #> 140    Non-Harmonic #> 141    Non-Harmonic #> 142    Non-Harmonic #> 143    Non-Harmonic #> 144    Non-Harmonic #> 145    Non-Harmonic #> 146    Non-Harmonic #> 147    Non-Harmonic #> 148    Non-Harmonic #> 149    Non-Harmonic #> 150    Non-Harmonic #> 151    Non-Harmonic #> 152    Non-Harmonic #> 153    Non-Harmonic #> 154    Non-Harmonic #> 155    Non-Harmonic #> 156    Non-Harmonic #> 157    Non-Harmonic #> 158    Non-Harmonic #> 159    Non-Harmonic #> 160    Non-Harmonic #> 161    Non-Harmonic #> 162    Non-Harmonic #> 163    Non-Harmonic #> 164    Non-Harmonic #> 165    Non-Harmonic #> 166    Non-Harmonic #> 167    Non-Harmonic #> 168    Non-Harmonic #> 169    Non-Harmonic #> 170    Non-Harmonic #> 171    Non-Harmonic #> 172    Non-Harmonic #> 173    Non-Harmonic #> 174    Non-Harmonic #> 175    Non-Harmonic #> 176    Non-Harmonic #> 177    Non-Harmonic #> 178    Non-Harmonic #> 179    Non-Harmonic #> 180    Non-Harmonic #> 181    Non-Harmonic #> 182    Non-Harmonic #> 183    Non-Harmonic #> 184    Non-Harmonic #> 185    Non-Harmonic #> 186    Non-Harmonic #> 187    Non-Harmonic #> 188    Non-Harmonic #> 189    Non-Harmonic #> 190    Non-Harmonic #> 191    Non-Harmonic #> 192    Non-Harmonic #> 193    Non-Harmonic #> 194    Non-Harmonic #> 195    Non-Harmonic #> 196    Non-Harmonic #> 197    Non-Harmonic #> 198    Non-Harmonic #> 199    Non-Harmonic #> 200    Non-Harmonic #> 201    Non-Harmonic #> 202    Non-Harmonic #> 203    Non-Harmonic #> 204    Non-Harmonic #> 205    Non-Harmonic #> 206    Non-Harmonic #> 207    Non-Harmonic #> 208    Non-Harmonic #> 209    Non-Harmonic #> 210    Non-Harmonic #> 211    Non-Harmonic #> 212    Non-Harmonic #> 213    Non-Harmonic #> 214    Non-Harmonic #> 215    Non-Harmonic #> 216    Non-Harmonic #> 217    Non-Harmonic #> 218    Non-Harmonic #> 219    Non-Harmonic #> 220    Non-Harmonic #> 221    Non-Harmonic #> 222    Non-Harmonic #> 223    Non-Harmonic #> 224    Non-Harmonic #> 225    Non-Harmonic #> 226    Non-Harmonic #> 227    Non-Harmonic #> 228    Non-Harmonic #> 229    Non-Harmonic #> 230    Non-Harmonic #> 231    Non-Harmonic #> 232    Non-Harmonic #> 233    Non-Harmonic #> 234    Non-Harmonic #> 235    Non-Harmonic #> 236    Non-Harmonic #> 237    Non-Harmonic #> 238    Non-Harmonic #> 239    Non-Harmonic #> 240    Non-Harmonic #> 241    Non-Harmonic #> 242    Non-Harmonic #> 243    Non-Harmonic #> 244    Non-Harmonic #> 245    Non-Harmonic #> 246    Non-Harmonic #> 247    Non-Harmonic #> 248    Non-Harmonic #> 249    Non-Harmonic #> 250    Non-Harmonic #> 251    Non-Harmonic #> 252    Non-Harmonic #> 253    Non-Harmonic #> 254    Non-Harmonic #> 255    Non-Harmonic #> 256    Non-Harmonic #> 257    Non-Harmonic #> 258    Non-Harmonic #> 259    Non-Harmonic #> 260    Non-Harmonic #> 261    Non-Harmonic #> 262    Non-Harmonic #> 263    Non-Harmonic #> 264    Non-Harmonic #> 265    Non-Harmonic #> 266    Non-Harmonic #> 267    Non-Harmonic #> 268    Non-Harmonic #> 269    Non-Harmonic #> 270    Non-Harmonic #> 271    Non-Harmonic #> 272    Non-Harmonic #> 273    Non-Harmonic #> 274    Non-Harmonic #> 275    Non-Harmonic #> 276    Non-Harmonic #> 277    Non-Harmonic #> 278    Non-Harmonic #> 279    Non-Harmonic #> 280    Non-Harmonic #> 281    Non-Harmonic #> 282    Non-Harmonic #> 283    Non-Harmonic #> 284    Non-Harmonic #> 285    Non-Harmonic #> 286    Non-Harmonic #> 287    Non-Harmonic #> 288    Non-Harmonic #> 289    Non-Harmonic #> 290    Non-Harmonic #> 291    Non-Harmonic #> 292    Non-Harmonic #> 293    Non-Harmonic #> 294    Non-Harmonic #> 295    Non-Harmonic #> 296    Non-Harmonic #> 297    Non-Harmonic #> 298    Non-Harmonic #> 299    Non-Harmonic #> 300    Non-Harmonic #> 301    Non-Harmonic #> 302    Non-Harmonic #> 303    Non-Harmonic #> 304    Non-Harmonic #> 305    Non-Harmonic #> 306    Non-Harmonic #> 307    Non-Harmonic #> 308    Non-Harmonic #> 309    Non-Harmonic #> 310    Non-Harmonic #> 311    Non-Harmonic #> 312    Non-Harmonic #> 313    Non-Harmonic #> 314    Non-Harmonic #> 315    Non-Harmonic #> 316    Non-Harmonic #> 317    Non-Harmonic #> 318    Non-Harmonic #> 319    Non-Harmonic #> 320    Non-Harmonic #> 321    Non-Harmonic #> 322    Non-Harmonic #> 323    Non-Harmonic #> 324    Non-Harmonic #> 325    Non-Harmonic #> 326    Non-Harmonic #> 327    Non-Harmonic #> 328    Non-Harmonic #> 329    Non-Harmonic #> 330    Non-Harmonic #> 331    Non-Harmonic #> 332    Non-Harmonic #> 333    Non-Harmonic #> 334    Non-Harmonic #> 335    Non-Harmonic #> 336    Non-Harmonic #>  #> $sig.level.power #> [1] 0.03431736 #>  #> $alpha #> [1] 0.01 #>"},{"path":"https://nasserdr.github.io/digiRhythm/reference/pbaluev.html","id":null,"dir":"Reference","previous_headings":"","what":"Returns p-value of a frequency peak according to pbaluev (2008) given Z, fmax and tm. Reused from the LOMB library (https://rdrr.io/cran/lomb/) — pbaluev","title":"Returns p-value of a frequency peak according to pbaluev (2008) given Z, fmax and tm. Reused from the LOMB library (https://rdrr.io/cran/lomb/) — pbaluev","text":"Returns p-value frequency peak according pbaluev (2008) given Z, fmax tm. Reused LOMB library (https://rdrr.io/cran/lomb/)","code":""},{"path":"https://nasserdr.github.io/digiRhythm/reference/pbaluev.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Returns p-value of a frequency peak according to pbaluev (2008) given Z, fmax and tm. Reused from the LOMB library (https://rdrr.io/cran/lomb/) — pbaluev","text":"","code":"pbaluev(Z, fmax, tm)"},{"path":"https://nasserdr.github.io/digiRhythm/reference/pbaluev.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Returns p-value of a frequency peak according to pbaluev (2008) given Z, fmax and tm. Reused from the LOMB library (https://rdrr.io/cran/lomb/) — pbaluev","text":"Z power frequency fmax maximum frequency spectrum tm time grid original time series","code":""},{"path":"https://nasserdr.github.io/digiRhythm/reference/pbaluev.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Returns p-value of a frequency peak according to pbaluev (2008) given Z, fmax and tm. Reused from the LOMB library (https://rdrr.io/cran/lomb/) — pbaluev","text":"intermediate calculation step needed compute p-value according pbaluev (2008).","code":""},{"path":"https://nasserdr.github.io/digiRhythm/reference/print_v.html","id":null,"dir":"Reference","previous_headings":"","what":"Print if Verbose is true — print_v","title":"Print if Verbose is true — print_v","text":"Print Verbose true","code":""},{"path":"https://nasserdr.github.io/digiRhythm/reference/print_v.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print if Verbose is true — print_v","text":"","code":"print_v(string, verbose)"},{"path":"https://nasserdr.github.io/digiRhythm/reference/print_v.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print if Verbose is true — print_v","text":"string string print verbose TRUE, print string","code":""},{"path":"https://nasserdr.github.io/digiRhythm/reference/print_v.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Print if Verbose is true — print_v","text":"return value. Prints string concatenated verbose latter NULL.","code":""},{"path":"https://nasserdr.github.io/digiRhythm/reference/remove_activity_outliers.html","id":null,"dir":"Reference","previous_headings":"","what":"Remove outliers from the data — remove_activity_outliers","title":"Remove outliers from the data — remove_activity_outliers","text":"Remove outliers data","code":""},{"path":"https://nasserdr.github.io/digiRhythm/reference/remove_activity_outliers.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Remove outliers from the data — remove_activity_outliers","text":"","code":"remove_activity_outliers(df)"},{"path":"https://nasserdr.github.io/digiRhythm/reference/remove_activity_outliers.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Remove outliers from the data — remove_activity_outliers","text":"df dataframe containing activity data","code":""},{"path":"https://nasserdr.github.io/digiRhythm/reference/remove_activity_outliers.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Remove outliers from the data — remove_activity_outliers","text":"return dataframe columns start second one undergone outlier removal.","code":""},{"path":"https://nasserdr.github.io/digiRhythm/reference/resample_dgm.html","id":null,"dir":"Reference","previous_headings":"","what":"Change the sampling of a digiRhythm friendly dataset — resample_dgm","title":"Change the sampling of a digiRhythm friendly dataset — resample_dgm","text":"function upsamples data downsample . new sampling multiple current sampling period, given minutes.","code":""},{"path":"https://nasserdr.github.io/digiRhythm/reference/resample_dgm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Change the sampling of a digiRhythm friendly dataset — resample_dgm","text":"","code":"resample_dgm(data, new_sampling)"},{"path":"https://nasserdr.github.io/digiRhythm/reference/resample_dgm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Change the sampling of a digiRhythm friendly dataset — resample_dgm","text":"data dataframe containing activity data new_sampling new sampling (multiple current sampling) minutes","code":""},{"path":"https://nasserdr.github.io/digiRhythm/reference/resample_dgm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Change the sampling of a digiRhythm friendly dataset — resample_dgm","text":"digiRhythm friendly dataset new sampling","code":""},{"path":"https://nasserdr.github.io/digiRhythm/reference/resample_dgm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Change the sampling of a digiRhythm friendly dataset — resample_dgm","text":"","code":"data(\"df516b_2\", package = \"digiRhythm\") df <- df516b_2 df <- remove_activity_outliers(df) new_sampling <- 30 new_dgm <- resample_dgm(df, new_sampling)"},{"path":"https://nasserdr.github.io/digiRhythm/reference/timedata.html","id":null,"dir":"Reference","previous_headings":"","what":"timedata Dataset of start and end of day and night — timedata","title":"timedata Dataset of start and end of day and night — timedata","text":"dataset start endtime morning milking evening milking dairy farm.","code":""},{"path":"https://nasserdr.github.io/digiRhythm/reference/timedata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"timedata Dataset of start and end of day and night — timedata","text":"","code":"timedata"},{"path":"https://nasserdr.github.io/digiRhythm/reference/timedata.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"timedata Dataset of start and end of day and night — timedata","text":"data frame 4 columns day_start POSIX formatted datetime day_end POSIX formatted datetime night_start POSIX formatted datetime night_end POSIX formatted datetime","code":""},{"path":"https://nasserdr.github.io/digiRhythm/reference/timedata.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"timedata Dataset of start and end of day and night — timedata","text":"Johann Heinrich von Thünen- Institute Organic Farming","code":""}]
